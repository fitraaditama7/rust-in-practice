{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0","program":"/Users/fitraaditama/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","image","/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"default\"","--cfg","feature=\"gif\"","--cfg","feature=\"gif_codec\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg-decoder\"","--cfg","feature=\"png\"","--cfg","feature=\"png_codec\"","--cfg","feature=\"ppm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=e61900075dbd013d","-C","extra-filename=-e61900075dbd013d","--out-dir","/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps","-L","dependency=/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps","--extern","byteorder=/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps/libbyteorder-60fd2ee97824e68e.rmeta","--extern","enum_primitive=/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps/libenum_primitive-c67be8b3021c44da.rmeta","--extern","gif=/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps/libgif-0d0c28a4d81d6aa4.rmeta","--extern","jpeg_decoder=/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps/libjpeg_decoder-b7f57c43d3f7b595.rmeta","--extern","num_iter=/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps/libnum_iter-2441844b0b2768f6.rmeta","--extern","num_rational=/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps/libnum_rational-064d89f592ba63bc.rmeta","--extern","num_traits=/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps/libnum_traits-78ec5ac60e7dadfb.rmeta","--extern","png=/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps/libpng-b2e74488c7a2f9e9.rmeta","--extern","scoped_threadpool=/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps/libscoped_threadpool-f69346e6981bc115.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/fitraaditama/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/fitraaditama/Dev/ngulik/rust/mandelbrot/target/rls/debug/deps/libimage-e61900075dbd013d.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[6127511267607717783,714560108543020726]},"crate_root":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src","external_crates":[{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9505258173972014140,1687564053001788342]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11611887195329836898,18391061204127126749]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8031993392717489033,4124505603786489705]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15271802224688203332,8792150453795694033]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7165577602573969849,9858108452520037846]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14698847031314625437,491468730102695142]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13330479813603739683,6803795581109914288]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18059772732427324572,13387991576644447952]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[10236583916794409636,10240650400930061727]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11381542376919589428,1099759283771964623]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[362513579181741490,3555756610499304386]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726896196391708128,17121846613634101866]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15657039231647705578,5960932578145670068]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7592225372802278695,9789656229435184476]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[5945252997488333873,17087989515833421657]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":16,"id":{"name":"num_iter","disambiguator":[5914814705053584413,10696024290899327655]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":17,"id":{"name":"num_integer","disambiguator":[15646322361133165374,18067226539795745656]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":18,"id":{"name":"num_traits","disambiguator":[1498843153916398433,12476994292860466784]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":19,"id":{"name":"num_rational","disambiguator":[15398092325885250930,6958257332095993129]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":20,"id":{"name":"rustc_serialize","disambiguator":[18063634161178683429,16734279313769512349]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":21,"id":{"name":"num_bigint","disambiguator":[3598068954478468497,15730828567539524788]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":22,"id":{"name":"rand","disambiguator":[91070460579331003,4720961892284840507]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":23,"id":{"name":"libc","disambiguator":[12293655624372226261,1519600221282631606]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":24,"id":{"name":"num_traits","disambiguator":[931160986350258284,3779410201464615465]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","num":25,"id":{"name":"enum_primitive","disambiguator":[15474436402181295449,4613891661023969828]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","num":26,"id":{"name":"png","disambiguator":[11488292010690175223,3987363849774162512]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","num":27,"id":{"name":"bitflags","disambiguator":[14477578430270417749,60507332007748541]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","num":28,"id":{"name":"inflate","disambiguator":[15291642296491409976,9470237776538691552]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","num":29,"id":{"name":"deflate","disambiguator":[15668719488403671877,2239555164827633717]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","num":30,"id":{"name":"adler32","disambiguator":[5113021150234614215,1254574267896614809]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":31,"id":{"name":"jpeg_decoder","disambiguator":[12925745830110477632,13746780812903034186]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":32,"id":{"name":"rayon","disambiguator":[354908680823063143,11267500992567569296]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":33,"id":{"name":"either","disambiguator":[15714097456394419749,4771461166427678878]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":34,"id":{"name":"rayon_core","disambiguator":[3400914957640388376,4566403087106065577]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":35,"id":{"name":"crossbeam_queue","disambiguator":[13812724732589169834,3154541986334309170]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":36,"id":{"name":"cfg_if","disambiguator":[2882691960039253388,905378029989288621]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":37,"id":{"name":"maybe_uninit","disambiguator":[11743363083951571151,6412065684288756749]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":38,"id":{"name":"crossbeam_utils","disambiguator":[11300578209594171981,11388466921656263248]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":39,"id":{"name":"lazy_static","disambiguator":[11980742202517877299,13303480249378304075]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":40,"id":{"name":"crossbeam_deque","disambiguator":[18017600004691615589,9407063818325276474]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":41,"id":{"name":"crossbeam_epoch","disambiguator":[8621713912403743848,8743494708902195853]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":42,"id":{"name":"memoffset","disambiguator":[10670297742456013263,15253087131106116456]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":43,"id":{"name":"scopeguard","disambiguator":[11935628645873929772,7017433651725663389]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","num":44,"id":{"name":"num_cpus","disambiguator":[1142149875273085246,12423658223956628584]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","num":45,"id":{"name":"gif","disambiguator":[15651210767798194726,11475329725469608225]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","num":46,"id":{"name":"lzw","disambiguator":[3231640003977955538,14796718412396083154]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","num":47,"id":{"name":"color_quant","disambiguator":[8144973053008246241,14495145599884320270]}},{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","num":48,"id":{"name":"scoped_threadpool","disambiguator":[15117086612319842905,5792717324307911183]}}],"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":0,"byte_end":2398,"line_start":1,"line_end":150,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2730},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":546,"byte_end":550,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2731},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":556,"byte_end":560,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Gray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2734},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":566,"byte_end":569,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"alias_span":null,"name":"RGB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2737},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":575,"byte_end":582,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2740},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":588,"byte_end":593,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"alias_span":null,"name":"GrayA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2743},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":599,"byte_end":603,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2974},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":629,"byte_end":633,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3030},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":639,"byte_end":644,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2946},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":650,"byte_end":653,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3002},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":659,"byte_end":663,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1478},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":689,"byte_end":701,"line_start":38,"line_end":38,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2593},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":707,"byte_end":717,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":723,"byte_end":734,"line_start":40,"line_end":40,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":740,"byte_end":754,"line_start":41,"line_end":41,"column_start":5,"column_end":19},"alias_span":null,"name":"DecodingResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1532},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":760,"byte_end":768,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":774,"byte_end":786,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1487},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":809,"byte_end":815,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1500},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":821,"byte_end":830,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"alias_span":null,"name":"MutPixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2093},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":871,"byte_end":875,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2096},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":881,"byte_end":889,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2094},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":895,"byte_end":902,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2098},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":908,"byte_end":918,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2100},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":924,"byte_end":932,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2102},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":938,"byte_end":946,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2623},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":985,"byte_end":989,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2624},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":995,"byte_end":998,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"alias_span":null,"name":"PNG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2626},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1004,"byte_end":1008,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"alias_span":null,"name":"JPEG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2628},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1014,"byte_end":1017,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"alias_span":null,"name":"GIF","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2630},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1023,"byte_end":1027,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"alias_span":null,"name":"WEBP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2632},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1033,"byte_end":1036,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"alias_span":null,"name":"PPM","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2638},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1042,"byte_end":1045,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"alias_span":null,"name":"BMP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2640},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1051,"byte_end":1054,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"alias_span":null,"name":"ICO","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1863},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1081,"byte_end":1086,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2020},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1092,"byte_end":1105,"line_start":71,"line_end":71,"column_start":5,"column_end":18},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3058},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1130,"byte_end":1141,"line_start":73,"line_end":73,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2033},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1147,"byte_end":1155,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2034},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1161,"byte_end":1170,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2035},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1176,"byte_end":1185,"line_start":76,"line_end":76,"column_start":5,"column_end":14},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2036},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1191,"byte_end":1205,"line_start":77,"line_end":77,"column_start":5,"column_end":19},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2042},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1236,"byte_end":1245,"line_start":81,"line_end":81,"column_start":17,"column_end":26},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1739},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1302,"byte_end":1306,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1749},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1312,"byte_end":1316,"line_start":86,"line_end":86,"column_start":5,"column_end":9},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1753},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1322,"byte_end":1338,"line_start":87,"line_end":87,"column_start":5,"column_end":21},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1754},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1344,"byte_end":1372,"line_start":88,"line_end":88,"column_start":5,"column_end":33},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1755},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1378,"byte_end":1390,"line_start":89,"line_end":89,"column_start":5,"column_end":17},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1744},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1396,"byte_end":1407,"line_start":90,"line_end":90,"column_start":5,"column_end":16},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2715},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1450,"byte_end":1454,"line_start":94,"line_end":94,"column_start":5,"column_end":9},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2722},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1460,"byte_end":1469,"line_start":95,"line_end":95,"column_start":5,"column_end":14},"alias_span":null,"name":"ImageRgb8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2725},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1475,"byte_end":1485,"line_start":96,"line_end":96,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageRgba8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2716},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1491,"byte_end":1501,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageLuma8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2719},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1507,"byte_end":1518,"line_start":98,"line_end":98,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageLumaA8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3069},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":102,"line_end":102,"column_start":5,"column_end":10},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2058},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1559,"byte_end":1565,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2093},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16417,"byte_end":16427,"line_start":11,"line_end":11,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":2096},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16471,"byte_end":16479,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":2094},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16485,"byte_end":16492,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":2098},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16498,"byte_end":16508,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":2100},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16514,"byte_end":16522,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":2102},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16528,"byte_end":16536,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16597,"byte_end":16605,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16611,"byte_end":16620,"line_start":24,"line_end":24,"column_start":5,"column_end":14},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16626,"byte_end":16635,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":158},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16641,"byte_end":16656,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16662,"byte_end":16675,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16729,"byte_end":16738,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":257},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16744,"byte_end":16750,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":259},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16756,"byte_end":16760,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16766,"byte_end":16775,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16833,"byte_end":16842,"line_start":40,"line_end":40,"column_start":5,"column_end":14},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16848,"byte_end":16854,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16860,"byte_end":16868,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16874,"byte_end":16882,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16888,"byte_end":16897,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16903,"byte_end":16911,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":2088},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16917,"byte_end":16924,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16930,"byte_end":16936,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16942,"byte_end":16954,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/mod.rs","byte_start":51566,"byte_end":51577,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/mod.rs","byte_start":51581,"byte_end":51592,"line_start":3,"line_end":3,"column_start":39,"column_end":50},"name":"WebpDecoder","value":"","parent":{"krate":0,"index":273}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/mod.rs","byte_start":121779,"byte_end":121789,"line_start":3,"line_end":3,"column_start":24,"column_end":34},"alias_span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/mod.rs","byte_start":121793,"byte_end":121803,"line_start":3,"line_end":3,"column_start":38,"column_end":48},"name":"PPMEncoder","value":"","parent":{"krate":0,"index":479}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/mod.rs","byte_start":121828,"byte_end":121838,"line_start":4,"line_end":4,"column_start":24,"column_end":34},"alias_span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/mod.rs","byte_start":121842,"byte_end":121852,"line_start":4,"line_end":4,"column_start":38,"column_end":48},"name":"PPMDecoder","value":"","parent":{"krate":0,"index":479}},{"kind":"Use","ref_id":{"krate":0,"index":615},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","byte_start":135791,"byte_end":135801,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"ICODecoder","value":"","parent":{"krate":0,"index":593}},{"kind":"Use","ref_id":{"krate":0,"index":667},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","byte_start":135826,"byte_end":135836,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":593}},{"kind":"Use","ref_id":{"krate":0,"index":798},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":146372,"byte_end":146383,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGDecoder","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":746},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":146408,"byte_end":146419,"line_start":11,"line_end":11,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":45,"index":354},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182547,"byte_end":182552,"line_start":12,"line_end":12,"column_start":20,"column_end":25},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":839}},{"kind":"Use","ref_id":{"krate":0,"index":2418},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","byte_start":185955,"byte_end":185966,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"TIFFDecoder","value":"","parent":{"krate":0,"index":888}},{"kind":"Use","ref_id":{"krate":0,"index":1082},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/mod.rs","byte_start":214031,"byte_end":214041,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"TGADecoder","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1187},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","byte_start":227316,"byte_end":227326,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPDecoder","value":"","parent":{"krate":0,"index":1116}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":259995,"byte_end":259996,"line_start":15,"line_end":15,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"RGBE8Pixel, rgbe8, HDRAdapter, SIGNATURE","parent":{"krate":0,"index":1266}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":259995,"byte_end":259996,"line_start":15,"line_end":15,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1266}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":0,"byte_end":2398,"line_start":1,"line_end":150,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":16},{"krate":0,"index":21},{"krate":0,"index":30},{"krate":0,"index":37},{"krate":0,"index":46},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":62},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":113},{"krate":0,"index":273},{"krate":0,"index":479},{"krate":0,"index":540},{"krate":0,"index":593},{"krate":0,"index":680},{"krate":0,"index":839},{"krate":0,"index":888},{"krate":0,"index":1028},{"krate":0,"index":1116},{"krate":0,"index":1266},{"krate":0,"index":1447},{"krate":0,"index":1557},{"krate":0,"index":1635},{"krate":0,"index":1756},{"krate":0,"index":1839},{"krate":0,"index":2037},{"krate":0,"index":2055},{"krate":0,"index":2076}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.\n","sig":null,"attributes":[{"value":"! This crate provides native rust implementations of","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"! image encoders and decoders and basic image manipulation","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":55,"byte_end":115,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"! functions.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":116,"byte_end":130,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":132,"byte_end":154,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":155,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":187,"byte_end":225,"line_start":7,"line_end":7,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":71},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/mod.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":75}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"! Mathematical helper functions and types.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/mod.rs","byte_start":2400,"byte_end":2444,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":72},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","parent":null,"children":[{"krate":0,"index":73}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[{"value":"! Shared mathematical utility functions.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2473,"byte_end":2515,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2760,"byte_end":2765,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"fn <N> (a: N, min: N, max: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"/ Cut value to be inside given range","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2517,"byte_end":2555,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2556,"byte_end":2559,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2560,"byte_end":2567,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use image::math::utils;","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2568,"byte_end":2595,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2596,"byte_end":2599,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(utils::clamp(-5, 0, 10),  0);","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2600,"byte_end":2644,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp( 6, 0, 10),  6);","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2645,"byte_end":2689,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp(15, 0, 10), 10);","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2690,"byte_end":2734,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2735,"byte_end":2742,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/utils.rs","byte_start":2743,"byte_end":2752,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":2077},{"krate":0,"index":2085},{"krate":0,"index":2083},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":99}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also  http://www.acm.org/~dekker/NEUQUANT.HTML\n","sig":null,"attributes":[{"value":"! NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":2887,"byte_end":2958,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"! See \"Kohonen neural networks for optimal colour quantization\"","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":2959,"byte_end":3024,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"! in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":3025,"byte_end":3098,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"! for a discussion of the algorithm.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":3099,"byte_end":3137,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"! See also  http://www.acm.org/~dekker/NEUQUANT.HTML","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":3138,"byte_end":3192,"line_start":5,"line_end":5,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":5042,"byte_end":5050,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98}],"decl_id":null,"docs":" Neural network color quantizer\n","sig":null,"attributes":[{"value":"/ Neural network color quantizer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":4996,"byte_end":5030,"line_start":65,"line_end":65,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":5354,"byte_end":5357,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"fn (samplefac: i32, colors: usize, pixels: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neuronal network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Creates a new neuronal network and trains it with the supplied data","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":5271,"byte_end":5342,"line_start":77,"line_end":77,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":5918,"byte_end":5922,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"fn (&mut self, pixels: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neuronal network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Initializes the neuronal network and trains it with the supplied data","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":5833,"byte_end":5906,"line_start":93,"line_end":93,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":6754,"byte_end":6763,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"fn (&self, pixel: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"/ Maps the pixel in-place to the best-matching color in the color map","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":6649,"byte_end":6720,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":6725,"byte_end":6742,"line_start":115,"line_end":115,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":7308,"byte_end":7316,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"fn (&self, pixel: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"/ Finds the best-matching index in the color map for `pixel`","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":7212,"byte_end":7274,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":7279,"byte_end":7296,"line_start":130,"line_end":130,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":113},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":126},{"krate":0,"index":132},{"krate":0,"index":137},{"krate":0,"index":147},{"krate":0,"index":162},{"krate":0,"index":222},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"! Image Processing Functions","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16279,"byte_end":16309,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/affine.rs","byte_start":20769,"byte_end":20777,"line_start":8,"line_end":8,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/affine.rs","byte_start":20649,"byte_end":20690,"line_start":6,"line_end":6,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/affine.rs","byte_start":21354,"byte_end":21363,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/affine.rs","byte_start":21233,"byte_end":21275,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/affine.rs","byte_start":21952,"byte_end":21961,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/affine.rs","byte_start":21831,"byte_end":21873,"line_start":44,"line_end":44,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/affine.rs","byte_start":22525,"byte_end":22540,"line_start":65,"line_end":65,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/affine.rs","byte_start":22416,"byte_end":22446,"line_start":63,"line_end":63,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":160},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/affine.rs","byte_start":23102,"byte_end":23115,"line_start":84,"line_end":84,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/affine.rs","byte_start":22995,"byte_end":23023,"line_start":82,"line_end":82,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":162},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":187},{"krate":0,"index":193},{"krate":0,"index":198},{"krate":0,"index":2088},{"krate":0,"index":2091},{"krate":0,"index":2090},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":219}],"decl_id":null,"docs":" Public only because of Rust bug:\n https://github.com/rust-lang/rust/issues/18241\n Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"/ Public only because of Rust bug:","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":16972,"byte_end":17008,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/ https://github.com/rust-lang/rust/issues/18241","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":17009,"byte_end":17059,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"! Functions for altering and converting the color of pixelbufs","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":26924,"byte_end":26988,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":177},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":27245,"byte_end":27254,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"fn <'a, I> (image: &I) -> ImageBuffer<Luma<<I::Pixel as Pixel>::Subpixel>,\n            Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":27194,"byte_end":27237,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":27867,"byte_end":27873,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":27774,"byte_end":27822,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":27823,"byte_end":27859,"line_start":31,"line_end":31,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":28336,"byte_end":28344,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"fn <I, P, S> (image: &I, contrast: f32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":28137,"byte_end":28183,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":28184,"byte_end":28243,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":28244,"byte_end":28328,"line_start":47,"line_end":47,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":29328,"byte_end":29336,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":29154,"byte_end":29186,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":29187,"byte_end":29243,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":29244,"byte_end":29320,"line_start":82,"line_end":82,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":193},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":30267,"byte_end":30276,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":30051,"byte_end":30085,"line_start":111,"line_end":111,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":30086,"byte_end":30137,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":30138,"byte_end":30207,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":30208,"byte_end":30259,"line_start":114,"line_end":114,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":198},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32210,"byte_end":32218,"line_start":173,"line_end":173,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32184,"byte_end":32199,"line_start":172,"line_end":172,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":199},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32282,"byte_end":32287,"line_start":175,"line_end":175,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32225,"byte_end":32272,"line_start":174,"line_end":174,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32379,"byte_end":32387,"line_start":178,"line_end":178,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"fn (&self, color: &Self::Color) -> usize","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Returns the index of the closed match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closed match of `color`","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32293,"byte_end":32345,"line_start":176,"line_end":176,"column_start":5,"column_end":57}},{"value":"/ in the color map.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32350,"byte_end":32371,"line_start":177,"line_end":177,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32493,"byte_end":32502,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"fn (&self, color: &mut Self::Color) -> ()","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32430,"byte_end":32485,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32598,"byte_end":32605,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map\n","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32539,"byte_end":32563,"line_start":183,"line_end":183,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":214},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":34481,"byte_end":34487,"line_start":256,"line_end":256,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"fn <Pix, Map> (image: &mut ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":34329,"byte_end":34410,"line_start":254,"line_end":254,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":34411,"byte_end":34473,"line_start":255,"line_end":255,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":219},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":35998,"byte_end":36010,"line_start":293,"line_end":293,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"fn <Pix, Map> (image: &ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":35901,"byte_end":35990,"line_start":292,"line_end":292,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37232,"byte_end":37239,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":2093},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37207,"byte_end":37227,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37268,"byte_end":37276,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":2093},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37246,"byte_end":37263,"line_start":21,"line_end":21,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37304,"byte_end":37314,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":2093},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37283,"byte_end":37299,"line_start":24,"line_end":24,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37345,"byte_end":37353,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":2093},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37321,"byte_end":37340,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37390,"byte_end":37398,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":2093},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37360,"byte_end":37385,"line_start":30,"line_end":30,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2093},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37190,"byte_end":37200,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"FilterType::{Nearest, Triangle, CatmullRom, Gaussian, Lanczos3}","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2102}],"decl_id":null,"docs":" Available Sampling Filters\n","sig":null,"attributes":[{"value":"/ Available Sampling Filters","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":37127,"byte_end":37157,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":45225,"byte_end":45234,"line_start":290,"line_end":290,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"fn <I, P, S> (image: &I, kernel: &[f32]) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":45032,"byte_end":45083,"line_start":287,"line_end":287,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":45084,"byte_end":45147,"line_start":288,"line_end":288,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":257},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":47667,"byte_end":47673,"line_start":364,"line_end":364,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"fn <I> (image: &I, nwidth: u32, nheight: u32, filter: FilterType) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":47424,"byte_end":47482,"line_start":360,"line_end":360,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":47483,"byte_end":47541,"line_start":361,"line_end":361,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":47542,"byte_end":47589,"line_start":362,"line_end":362,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":259},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":48909,"byte_end":48913,"line_start":400,"line_end":400,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"fn <I> (image: &I, sigma: f32) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":48727,"byte_end":48778,"line_start":397,"line_end":397,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":48779,"byte_end":48831,"line_start":398,"line_end":398,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":262},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":49876,"byte_end":49885,"line_start":430,"line_end":430,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"fn <I, P, S> (image: &I, sigma: f32, threshold: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":49547,"byte_end":49600,"line_start":424,"line_end":424,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":49601,"byte_end":49652,"line_start":425,"line_end":425,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for the difference between","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":49653,"byte_end":49716,"line_start":426,"line_end":426,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":49717,"byte_end":49720,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ See https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/sample.rs","byte_start":49721,"byte_end":49798,"line_start":428,"line_end":428,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":267},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":17207,"byte_end":17211,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"fn <I> (image: &mut I, x: u32, y: u32, width: u32, height: u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":17091,"byte_end":17130,"line_start":57,"line_end":57,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":269},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":17787,"byte_end":17794,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"fn <I> (bottom: &mut I, top: &I, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":17730,"byte_end":17779,"line_start":76,"line_end":76,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":271},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":18660,"byte_end":18667,"line_start":106,"line_end":106,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"fn <I> (bottom: &mut I, top: &I, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":18587,"byte_end":18652,"line_start":105,"line_end":105,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":273},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::webp","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/mod.rs","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":308},{"krate":0,"index":313}],"decl_id":null,"docs":" Decoding of Webp Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1664,"byte_end":1688,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"! Decoding of Webp Images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/mod.rs","byte_start":51514,"byte_end":51541,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/decoder.rs","byte_start":51933,"byte_end":51944,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"WebpDecoder","qualname":"::webp::decoder::WebpDecoder","value":"WebpDecoder {  }","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"decl_id":null,"docs":" A Representation of a Webp Image format decoder.\n","sig":null,"attributes":[{"value":"/ A Representation of a Webp Image format decoder.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/decoder.rs","byte_start":51869,"byte_end":51921,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/decoder.rs","byte_start":52179,"byte_end":52182,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<WebpDecoder<R>>::new","value":"fn (r: R) -> WebpDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebpDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[{"value":"/ Create a new WebpDecoder from the Reader ```r```.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/decoder.rs","byte_start":52061,"byte_end":52114,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/ This function takes ownership of the Reader.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/decoder.rs","byte_start":52119,"byte_end":52167,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":313},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::webp::vp8","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":396},{"krate":0,"index":2107},{"krate":0,"index":2116},{"krate":0,"index":2115},{"krate":0,"index":404},{"krate":0,"index":2120},{"krate":0,"index":2135},{"krate":0,"index":2133},{"krate":0,"index":2131},{"krate":0,"index":2137},{"krate":0,"index":2150},{"krate":0,"index":2149},{"krate":0,"index":2147},{"krate":0,"index":408},{"krate":0,"index":431},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[{"value":"! An implementation of the VP8 Video Codec","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57440,"byte_end":57484,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57485,"byte_end":57488,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a partial implementation of the","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57489,"byte_end":57545,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"! VP8 video format as defined in RFC-6386.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57546,"byte_end":57590,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57591,"byte_end":57594,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! It decodes Keyframes only sans Loop Filtering.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57595,"byte_end":57645,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"! VP8 is the underpinning of the Webp image format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57646,"byte_end":57698,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57699,"byte_end":57702,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57703,"byte_end":57722,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"! * [rfc-6386](http://tools.ietf.org/html/rfc6386) - The VP8 Data Format and Decoding Guide","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57723,"byte_end":57816,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"! * [VP8.pdf](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37073.pdf) - An overview of","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57817,"byte_end":57939,"line_start":11,"line_end":11,"column_start":1,"column_end":123}},{"value":"! of the VP8 format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57940,"byte_end":57961,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":57962,"byte_end":57965,"line_start":13,"line_end":13,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85593,"byte_end":85598,"line_start":753,"line_end":753,"column_start":12,"column_end":17},"name":"Frame","qualname":"::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[{"value":"/ A Representation of the last decoded video frame","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85496,"byte_end":85548,"line_start":751,"line_end":751,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2121},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85645,"byte_end":85650,"line_start":755,"line_end":755,"column_start":9,"column_end":14},"name":"width","qualname":"::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[{"value":"/ The width of the luma plane","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85605,"byte_end":85636,"line_start":754,"line_end":754,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2122},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85703,"byte_end":85709,"line_start":758,"line_end":758,"column_start":9,"column_end":15},"name":"height","qualname":"::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[{"value":"/ The height of the luma plane","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85662,"byte_end":85694,"line_start":757,"line_end":757,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85761,"byte_end":85765,"line_start":761,"line_end":761,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[{"value":"/ The luma plane of the frame","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85721,"byte_end":85752,"line_start":760,"line_end":760,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85836,"byte_end":85844,"line_start":764,"line_end":764,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is a keyframe","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85781,"byte_end":85827,"line_start":763,"line_end":763,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85940,"byte_end":85951,"line_start":769,"line_end":769,"column_start":9,"column_end":20},"name":"for_display","qualname":"::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is intended for display","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85875,"byte_end":85931,"line_start":768,"line_end":768,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":86082,"byte_end":86092,"line_start":774,"line_end":774,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[{"value":"/ The pixel type of the frame as defined by Section 9.2","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85983,"byte_end":86040,"line_start":772,"line_end":772,"column_start":5,"column_end":62}},{"value":"/ of the VP8 Specification","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":86045,"byte_end":86073,"line_start":773,"line_end":773,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":86469,"byte_end":86479,"line_start":802,"line_end":802,"column_start":12,"column_end":22},"name":"VP8Decoder","qualname":"::webp::vp8::VP8Decoder","value":"VP8Decoder {  }","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[{"value":"/ VP8 Decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":86411,"byte_end":86426,"line_start":799,"line_end":799,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":86427,"byte_end":86430,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ Only decodes keyframes","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":86431,"byte_end":86457,"line_start":801,"line_end":801,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":87143,"byte_end":87146,"line_start":837,"line_end":837,"column_start":12,"column_end":15},"name":"new","qualname":"<VP8Decoder<R>>::new","value":"fn (r: R) -> VP8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[{"value":"/ Create a new decoder.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":87039,"byte_end":87064,"line_start":835,"line_end":835,"column_start":5,"column_end":30}},{"value":"/ The reader must present a raw vp8 bitstream to the decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":87069,"byte_end":87131,"line_start":836,"line_end":836,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":105877,"byte_end":105889,"line_start":1394,"line_end":1394,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<VP8Decoder<R>>::decode_frame","value":"fn (&mut self) -> io::Result<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[{"value":"/ Decodes the current frame and returns a reference to it","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":105806,"byte_end":105865,"line_start":1393,"line_end":1393,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":479},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ppm","qualname":"::ppm","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/mod.rs","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":505}],"decl_id":null,"docs":" Encoding of portable pixmap Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"ppm\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1703,"byte_end":1726,"line_start":115,"line_end":115,"column_start":1,"column_end":24}},{"value":"! Encoding of portable pixmap Images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/mod.rs","byte_start":121716,"byte_end":121754,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":124762,"byte_end":124772,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"PPMEncoder","qualname":"::ppm::encoder::PPMEncoder","value":"PPMEncoder {  }","parent":null,"children":[{"krate":0,"index":495}],"decl_id":null,"docs":" A representation of a PPM encoder.\n","sig":null,"attributes":[{"value":"/ A representation of a PPM encoder.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":124712,"byte_end":124750,"line_start":15,"line_end":15,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":124966,"byte_end":124969,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<PPMEncoder>::new","value":"fn (w: &mut W) -> PPMEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new PPMEncoder from the Writer ```w```.\n This function takes ownership of the Writer.\n","sig":null,"attributes":[{"value":"/ Create a new PPMEncoder from the Writer ```w```.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":124849,"byte_end":124901,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"/ This function takes ownership of the Writer.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":124906,"byte_end":124954,"line_start":22,"line_end":22,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":125214,"byte_end":125220,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"encode","qualname":"<PPMEncoder>::encode","value":"fn (&mut self, im: &[u8], width: u32, height: u32, color: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode the buffer ```im``` as a PPM image.\n ```width``` and ```height``` are the dimensions of the buffer.\n ```color``` is the buffers ColorType.\n","sig":null,"attributes":[{"value":"/ Encode the buffer ```im``` as a PPM image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":125039,"byte_end":125085,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/ ```width``` and ```height``` are the dimensions of the buffer.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":125090,"byte_end":125156,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ ```color``` is the buffers ColorType.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":125161,"byte_end":125202,"line_start":29,"line_end":29,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":519},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/decoder.rs","byte_start":127500,"byte_end":127510,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"PPMDecoder","qualname":"::ppm::decoder::PPMDecoder","value":"PPMDecoder {  }","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" PPM decoder\n","sig":null,"attributes":[{"value":"/ PPM decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/decoder.rs","byte_start":127473,"byte_end":127488,"line_start":10,"line_end":10,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/decoder.rs","byte_start":127704,"byte_end":127707,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PPMDecoder<R>>::new","value":"fn (r: R) -> ImageResult<PPMDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/decoder.rs","byte_start":127631,"byte_end":127692,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":540},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::png","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":547},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":569},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png_codec\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1740,"byte_end":1769,"line_start":117,"line_end":117,"column_start":1,"column_end":30}},{"value":"! Decoding and Encoding of PNG Images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":130605,"byte_end":130644,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":130645,"byte_end":130648,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":130649,"byte_end":130739,"line_start":4,"line_end":4,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":130740,"byte_end":130743,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":130744,"byte_end":130763,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"! * http://www.w3.org/TR/PNG/ - The PNG Specification","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":130764,"byte_end":130819,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":130820,"byte_end":130823,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":131077,"byte_end":131087,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"PNGDecoder","qualname":"::png::PNGDecoder","value":"PNGDecoder {  }","parent":null,"children":[{"krate":0,"index":564}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":131050,"byte_end":131065,"line_start":24,"line_end":24,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":131269,"byte_end":131272,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGDecoder<R>>::new","value":"fn (r: R) -> PNGDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":131195,"byte_end":131257,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":576},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133128,"byte_end":133138,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"PNGEncoder","qualname":"::png::PNGEncoder","value":"PNGEncoder {  }","parent":null,"children":[{"krate":0,"index":578}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133101,"byte_end":133116,"line_start":89,"line_end":89,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133268,"byte_end":133271,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGEncoder<W>>::new","value":"fn (w: W) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133198,"byte_end":133256,"line_start":95,"line_end":95,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133494,"byte_end":133500,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNGEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133356,"byte_end":133389,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133394,"byte_end":133446,"line_start":103,"line_end":103,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133451,"byte_end":133482,"line_start":104,"line_end":104,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":593},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::ico","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":653}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1783,"byte_end":1806,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"!  Decoding and Encoding of ICO files","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","byte_start":135504,"byte_end":135543,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","byte_start":135544,"byte_end":135547,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder and encoder for ICO (Windows Icon) image container files.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","byte_start":135548,"byte_end":135620,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","byte_start":135621,"byte_end":135624,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","byte_start":135625,"byte_end":135645,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * https://msdn.microsoft.com/en-us/library/ms997538.aspx","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","byte_start":135646,"byte_end":135707,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"!  * https://en.wikipedia.org/wiki/ICO_%28file_format%29","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/mod.rs","byte_start":135708,"byte_end":135766,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/decoder.rs","byte_start":136336,"byte_end":136346,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICODecoder","qualname":"::ico::decoder::ICODecoder","value":"ICODecoder {  }","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[{"value":"/ An ico decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/decoder.rs","byte_start":136306,"byte_end":136324,"line_start":15,"line_end":15,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/decoder.rs","byte_start":136843,"byte_end":136846,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<ICODecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<ICODecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/decoder.rs","byte_start":136770,"byte_end":136831,"line_start":41,"line_end":41,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":667},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/encoder.rs","byte_start":143439,"byte_end":143449,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICOEncoder","qualname":"::ico::encoder::ICOEncoder","value":"ICOEncoder {  }","parent":null,"children":[{"krate":0,"index":669}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/encoder.rs","byte_start":143412,"byte_end":143427,"line_start":15,"line_end":15,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/encoder.rs","byte_start":143580,"byte_end":143583,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<ICOEncoder<W>>::new","value":"fn (w: W) -> ICOEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/encoder.rs","byte_start":143509,"byte_end":143568,"line_start":21,"line_end":21,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/encoder.rs","byte_start":143904,"byte_end":143910,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<ICOEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image``` that has dimensions ```width``` and","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/encoder.rs","byte_start":143668,"byte_end":143737,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ ```height``` and ```ColorType``` ```c```.  The dimensions of the image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/encoder.rs","byte_start":143742,"byte_end":143816,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ must be between 1 and 256 (inclusive) or an error will be returned.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/encoder.rs","byte_start":143821,"byte_end":143892,"line_start":30,"line_end":30,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":680},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":787},{"krate":0,"index":820},{"krate":0,"index":823}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1820,"byte_end":1844,"line_start":121,"line_end":121,"column_start":1,"column_end":25}},{"value":"! Decoding and Encoding of JPEG Images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":146050,"byte_end":146090,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":146091,"byte_end":146094,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":146095,"byte_end":146190,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"! This module implements the Baseline JPEG standard.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":146191,"byte_end":146245,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":146246,"byte_end":146249,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! #Related Links","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":146250,"byte_end":146268,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"! * http://www.w3.org/Graphics/JPEG/itu-t81.pdf - The JPEG specification","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":146269,"byte_end":146343,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/mod.rs","byte_start":146344,"byte_end":146347,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":746},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":154862,"byte_end":154873,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":154810,"byte_end":154850,"line_start":277,"line_end":277,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":155229,"byte_end":155232,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"fn (w: &mut W) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":155159,"byte_end":155217,"line_start":291,"line_end":291,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":155533,"byte_end":155549,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"fn (w: &mut W, quality: u8) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":155328,"byte_end":155395,"line_start":296,"line_end":296,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":155400,"byte_end":155471,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":155476,"byte_end":155521,"line_start":298,"line_end":298,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":157525,"byte_end":157531,"line_start":349,"line_end":349,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":157321,"byte_end":157354,"line_start":344,"line_end":344,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":157359,"byte_end":157411,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":157416,"byte_end":157447,"line_start":346,"line_end":346,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":157452,"byte_end":157455,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":157460,"byte_end":157513,"line_start":348,"line_end":348,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":798},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":169478,"byte_end":169489,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"JPEGDecoder","qualname":"::jpeg::decoder::JPEGDecoder","value":"JPEGDecoder {  }","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":169450,"byte_end":169466,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":169692,"byte_end":169695,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGDecoder<R>>::new","value":"fn (r: R) -> JPEGDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":169619,"byte_end":169680,"line_start":15,"line_end":15,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":839},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::gif","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":870},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":885}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif_codec\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1859,"byte_end":1888,"line_start":123,"line_end":123,"column_start":1,"column_end":30}},{"value":"!  Decoding of GIF Images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182247,"byte_end":182274,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182275,"byte_end":182278,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  GIF (Graphics Interchange Format) is an image format that supports lossless compression.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182279,"byte_end":182372,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182373,"byte_end":182376,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182377,"byte_end":182397,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * http://www.w3.org/Graphics/GIF/spec-gif89a.txt - The GIF Specification","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182398,"byte_end":182475,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182476,"byte_end":182479,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":863},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182755,"byte_end":182762,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::gif::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":865}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182728,"byte_end":182743,"line_start":23,"line_end":23,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182941,"byte_end":182944,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn (r: R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam ```r```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182867,"byte_end":182929,"line_start":29,"line_end":29,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":877},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":184828,"byte_end":184835,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gif::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":879}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":184800,"byte_end":184816,"line_start":90,"line_end":90,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":184935,"byte_end":184938,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"fn (w: W) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new GIF encoder.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":184893,"byte_end":184923,"line_start":96,"line_end":96,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":185048,"byte_end":185054,"line_start":103,"line_end":103,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder<W>>::encode","value":"fn (self, frame: Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a frame.\n","sig":null,"attributes":[{"value":"/ Encodes a frame.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":185016,"byte_end":185036,"line_start":102,"line_end":102,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":888},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::tiff","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890}],"decl_id":null,"docs":"  Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1902,"byte_end":1926,"line_start":125,"line_end":125,"column_start":1,"column_end":25}},{"value":"!  Decoding and Encoding of TIFF Images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","byte_start":185649,"byte_end":185690,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","byte_start":185691,"byte_end":185694,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  TIFF (Tagged Image File Format) is a versatile image format that supports","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","byte_start":185695,"byte_end":185773,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"!  lossless and lossy compression.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","byte_start":185774,"byte_end":185810,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","byte_start":185811,"byte_end":185814,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","byte_start":185815,"byte_end":185835,"line_start":6,"line_end":6,"column_start":1,"column_end":21}},{"value":"!  * http://partners.adobe.com/public/developer/tiff/index.html - The TIFF specification","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","byte_start":185836,"byte_end":185926,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/mod.rs","byte_start":185927,"byte_end":185930,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2306},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":211118,"byte_end":211130,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"name":"LittleEndian","qualname":"::tiff::decoder::stream::ByteOrder::LittleEndian","value":"ByteOrder::LittleEndian","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" little endian byte order\n","sig":null,"attributes":[{"value":"/ little endian byte order","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":211085,"byte_end":211113,"line_start":11,"line_end":11,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2308},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":211166,"byte_end":211175,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"BigEndian","qualname":"::tiff::decoder::stream::ByteOrder::BigEndian","value":"ByteOrder::BigEndian","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" big endian byte order\n","sig":null,"attributes":[{"value":"/ big endian byte order","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":211136,"byte_end":211161,"line_start":13,"line_end":13,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":211069,"byte_end":211078,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ByteOrder","qualname":"::tiff::decoder::stream::ByteOrder","value":"ByteOrder::{LittleEndian, BigEndian}","parent":null,"children":[{"krate":0,"index":2306},{"krate":0,"index":2308}],"decl_id":null,"docs":" Byte order of the TIFF file.\n","sig":null,"attributes":[{"value":"/ Byte order of the TIFF file.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":210997,"byte_end":211029,"line_start":8,"line_end":8,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":187176,"byte_end":187187,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"TIFFDecoder","qualname":"::tiff::decoder::TIFFDecoder","value":"TIFFDecoder {  }","parent":null,"children":[{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429}],"decl_id":null,"docs":" The representation of a TIFF decoder","sig":null,"attributes":[{"value":"/ The representation of a TIFF decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":187042,"byte_end":187082,"line_start":72,"line_end":72,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":187083,"byte_end":187086,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Currently does not support decoding of interlaced images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":187087,"byte_end":187147,"line_start":74,"line_end":74,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":189259,"byte_end":189262,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<TIFFDecoder<R>>::new","value":"fn (r: R) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":189186,"byte_end":189247,"line_start":142,"line_end":142,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":190725,"byte_end":190729,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"init","qualname":"<TIFFDecoder<R>>::init","value":"fn (self) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the decoder.\n","sig":null,"attributes":[{"value":"/ Initializes the decoder.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":190685,"byte_end":190713,"line_start":182,"line_end":182,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":191020,"byte_end":191030,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"next_image","qualname":"<TIFFDecoder<R>>::next_image","value":"fn (mut self) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads in the next image.\n If there is no further image in the TIFF file a format error is returned.\n To determine whether there are more images call `TIFFDecoder::more_images` instead.\n","sig":null,"attributes":[{"value":"/ Reads in the next image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":190806,"byte_end":190834,"line_start":187,"line_end":187,"column_start":5,"column_end":33}},{"value":"/ If there is no further image in the TIFF file a format error is returned.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":190839,"byte_end":190916,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ To determine whether there are more images call `TIFFDecoder::more_images` instead.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":190921,"byte_end":191008,"line_start":189,"line_end":189,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193161,"byte_end":193172,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"more_images","qualname":"<TIFFDecoder<R>>::more_images","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there is at least one more image available.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there is at least one more image available.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193084,"byte_end":193149,"line_start":245,"line_end":245,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193334,"byte_end":193344,"line_start":254,"line_end":254,"column_start":12,"column_end":22},"name":"byte_order","qualname":"<TIFFDecoder<R>>::byte_order","value":"fn (&self) -> ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte_order\n","sig":null,"attributes":[{"value":"/ Returns the byte_order","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193296,"byte_end":193322,"line_start":253,"line_end":253,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193456,"byte_end":193466,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"read_short","qualname":"<TIFFDecoder<R>>::read_short","value":"fn (&mut self) -> Result<u16, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF short value\n","sig":null,"attributes":[{"value":"/ Reads a TIFF short value","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193402,"byte_end":193430,"line_start":258,"line_end":258,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193435,"byte_end":193444,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193601,"byte_end":193610,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"read_long","qualname":"<TIFFDecoder<R>>::read_long","value":"fn (&mut self) -> Result<u32, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF long value\n","sig":null,"attributes":[{"value":"/ Reads a TIFF long value","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193548,"byte_end":193575,"line_start":264,"line_end":264,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193580,"byte_end":193589,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193757,"byte_end":193768,"line_start":272,"line_end":272,"column_start":12,"column_end":23},"name":"read_offset","qualname":"<TIFFDecoder<R>>::read_offset","value":"fn (&mut self) -> Result<[u8; 4], io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF IFA offset/value field\n","sig":null,"attributes":[{"value":"/ Reads a TIFF IFA offset/value field","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193692,"byte_end":193731,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193736,"byte_end":193745,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193987,"byte_end":193998,"line_start":280,"line_end":280,"column_start":12,"column_end":23},"name":"goto_offset","qualname":"<TIFFDecoder<R>>::goto_offset","value":"fn (&mut self, offset: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the specified offset\n","sig":null,"attributes":[{"value":"/ Moves the cursor to the specified offset","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193917,"byte_end":193961,"line_start":278,"line_end":278,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":193966,"byte_end":193975,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::tga","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/mod.rs","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1941,"byte_end":1964,"line_start":127,"line_end":127,"column_start":1,"column_end":24}},{"value":"! Decoding of TGA Images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/mod.rs","byte_start":213758,"byte_end":213784,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/mod.rs","byte_start":213785,"byte_end":213788,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/mod.rs","byte_start":213789,"byte_end":213808,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"! http://googlesites.inequation.org/tgautilities","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/mod.rs","byte_start":213809,"byte_end":213859,"line_start":4,"line_end":4,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":218711,"byte_end":218721,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"TGADecoder","qualname":"::tga::decoder::TGADecoder","value":"TGADecoder {  }","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[{"value":"/ The representation of a TGA decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":218660,"byte_end":218699,"line_start":160,"line_end":160,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":219056,"byte_end":219059,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<TGADecoder<R>>::new","value":"fn (r: R) -> TGADecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":218987,"byte_end":219044,"line_start":177,"line_end":177,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::bmp","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118}],"decl_id":null,"docs":"  Decoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1978,"byte_end":2001,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"!  Decoding of BMP Images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","byte_start":227040,"byte_end":227067,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","byte_start":227068,"byte_end":227071,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder for BMP (Windows Bitmap) images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","byte_start":227072,"byte_end":227118,"line_start":3,"line_end":3,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","byte_start":227119,"byte_end":227122,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","byte_start":227123,"byte_end":227143,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * https://msdn.microsoft.com/en-us/library/windows/desktop/dd183375%28v=vs.85%29.aspx","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","byte_start":227144,"byte_end":227234,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"!  * https://en.wikipedia.org/wiki/BMP_file_format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","byte_start":227235,"byte_end":227287,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/mod.rs","byte_start":227288,"byte_end":227291,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":234223,"byte_end":234233,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"BMPDecoder","qualname":"::bmp::decoder::BMPDecoder","value":"BMPDecoder {  }","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[{"value":"/ A bmp decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":234194,"byte_end":234211,"line_start":226,"line_end":226,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":236883,"byte_end":236886,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPDecoder<R>>::new","value":"fn (r: R) -> BMPDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":236810,"byte_end":236871,"line_start":317,"line_end":317,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":237454,"byte_end":237460,"line_start":342,"line_end":342,"column_start":12,"column_end":18},"name":"reader","qualname":"<BMPDecoder<R>>::reader","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":237400,"byte_end":237423,"line_start":340,"line_end":340,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":244469,"byte_end":244496,"line_start":523,"line_end":523,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BMPDecoder<R>>::read_metadata_in_ico_format","value":"fn (&mut self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":244415,"byte_end":244438,"line_start":521,"line_end":521,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::hdr","value":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1394},{"krate":0,"index":1445},{"krate":0,"index":1446}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":2015,"byte_end":2038,"line_start":131,"line_end":131,"column_start":1,"column_end":24}},{"value":"!  Decoding of Radiance HDR Images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":259676,"byte_end":259712,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":259713,"byte_end":259716,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder for Radiance HDR images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":259717,"byte_end":259755,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":259756,"byte_end":259759,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":259760,"byte_end":259780,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * http://radsite.lbl.gov/radiance/refer/filefmts.pdf","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":259781,"byte_end":259838,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"!  * http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":259839,"byte_end":259894,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/mod.rs","byte_start":259895,"byte_end":259898,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":260466,"byte_end":260476,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"HDRAdapter","qualname":"::hdr::hdr_decoder::HDRAdapter","value":"HDRAdapter {  }","parent":null,"children":[{"krate":0,"index":2525},{"krate":0,"index":2526}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[{"value":"/ Adapter to conform to ```ImageDecoder``` trait","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":260387,"byte_end":260437,"line_start":19,"line_end":19,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":260620,"byte_end":260623,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRAdapter<R>>::new","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter \n","sig":null,"attributes":[{"value":"/ Creates adapter ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":260588,"byte_end":260608,"line_start":27,"line_end":27,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":260908,"byte_end":260921,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HDRAdapter<R>>::new_nonstrict","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[{"value":"/ Allows reading old Radiance HDR images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":260854,"byte_end":260896,"line_start":37,"line_end":37,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262481,"byte_end":262490,"line_start":89,"line_end":89,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::hdr::hdr_decoder::SIGNATURE","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[{"value":"/ Radiance HDR file signature","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262439,"byte_end":262470,"line_start":88,"line_end":88,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262616,"byte_end":262626,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"HDRDecoder","qualname":"::hdr::hdr_decoder::HDRDecoder","value":"HDRDecoder {  }","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[{"value":"/ An Radiance HDR decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262560,"byte_end":262587,"line_start":92,"line_end":92,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2539},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262842,"byte_end":262852,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"RGBE8Pixel","qualname":"::hdr::hdr_decoder::RGBE8Pixel","value":"RGBE8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":2540},{"krate":0,"index":2542}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262701,"byte_end":262774,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262775,"byte_end":262785,"line_start":102,"line_end":102,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2540},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262888,"byte_end":262889,"line_start":105,"line_end":105,"column_start":9,"column_end":10},"name":"c","qualname":"::hdr::hdr_decoder::RGBE8Pixel::c","value":"[u8; 3]","parent":{"krate":0,"index":2539},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[{"value":"/ Color components","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262859,"byte_end":262879,"line_start":104,"line_end":104,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262925,"byte_end":262926,"line_start":107,"line_end":107,"column_start":9,"column_end":10},"name":"e","qualname":"::hdr::hdr_decoder::RGBE8Pixel::e","value":"u8","parent":{"krate":0,"index":2539},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[{"value":"/ Exponent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262904,"byte_end":262916,"line_start":106,"line_end":106,"column_start":5,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262987,"byte_end":262992,"line_start":111,"line_end":111,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::hdr::hdr_decoder::rgbe8","value":"fn (r: u8, g: u8, b: u8, e: u8) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[{"value":"/ Creates ```RGBE8Pixel``` from components","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":262935,"byte_end":262979,"line_start":110,"line_end":110,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263188,"byte_end":263194,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<RGBE8Pixel>::to_hdr","value":"fn (self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly    \n","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly    ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263100,"byte_end":263162,"line_start":116,"line_end":116,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263167,"byte_end":263176,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263802,"byte_end":263808,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<RGBE8Pixel>::to_ldr","value":"fn <T> (self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2  \n  \n color_ldr = (color_hdr*scale)^gamma  \n  \n # Panic  \n  \n Panics when ```T::max_value()``` cannot be represented as f32.  \n","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2  ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263541,"byte_end":263617,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/  ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263622,"byte_end":263627,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ color_ldr = (color_hdr*scale)^gamma  ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263630,"byte_end":263671,"line_start":130,"line_end":130,"column_start":3,"column_end":44}},{"value":"/  ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263676,"byte_end":263681,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Panic  ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263684,"byte_end":263697,"line_start":132,"line_end":132,"column_start":3,"column_end":16}},{"value":"/  ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263700,"byte_end":263705,"line_start":133,"line_end":133,"column_start":3,"column_end":8}},{"value":"/ Panics when ```T::max_value()``` cannot be represented as f32.  ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263708,"byte_end":263776,"line_start":134,"line_end":134,"column_start":3,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263781,"byte_end":263790,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":264184,"byte_end":264202,"line_start":149,"line_end":149,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<RGBE8Pixel>::to_ldr_scale_gamma","value":"fn <T> (self, scale: f32, gamma: f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"/ Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263901,"byte_end":263967,"line_start":140,"line_end":140,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263972,"byte_end":263975,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)^gamma","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263980,"byte_end":264019,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":264024,"byte_end":264027,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":264032,"byte_end":264043,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":264048,"byte_end":264051,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Panics when T::max_value() cannot be represented as f32.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":264056,"byte_end":264116,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/ Panics when scale or gamma is NaN","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":264121,"byte_end":264158,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":264163,"byte_end":264172,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265296,"byte_end":265299,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HDRDecoder \n strict mode is enabled\n","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```r```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265146,"byte_end":265201,"line_start":172,"line_end":172,"column_start":5,"column_end":60}},{"value":"/ if the header is valid, creates HDRDecoder ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265206,"byte_end":265253,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/ strict mode is enabled","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265258,"byte_end":265284,"line_start":174,"line_end":174,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265711,"byte_end":265726,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HDRDecoder<R>>::with_strictness","value":"fn (mut reader: R, strict: bool) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HDRDecoder```.","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```reader```,","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265408,"byte_end":265469,"line_start":179,"line_end":179,"column_start":5,"column_end":66}},{"value":"/ if the header is valid, creates ```HDRDecoder```.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265474,"byte_end":265527,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265532,"byte_end":265535,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ strict enables strict mode","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265540,"byte_end":265570,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265575,"byte_end":265578,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Warning! Reading wrong file in non-strict mode","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265583,"byte_end":265633,"line_start":184,"line_end":184,"column_start":5,"column_end":55}},{"value":"/   could consume file size worth of memory in the process.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265638,"byte_end":265699,"line_start":185,"line_end":185,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":268389,"byte_end":268397,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HDRDecoder<R>>::metadata","value":"fn (&self) -> HDRMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[{"value":"/ Returns file metadata. Refer to ```HDRMetadata``` for details.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":268311,"byte_end":268377,"line_start":251,"line_end":251,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":268528,"byte_end":268545,"line_start":257,"line_end":257,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HDRDecoder<R>>::read_image_native","value":"fn (mut self) -> ImageResult<Vec<RGBE8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of RGBE8 pixels","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":268459,"byte_end":268516,"line_start":256,"line_end":256,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":269443,"byte_end":269463,"line_start":276,"line_end":276,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HDRDecoder<R>>::read_image_transform","value":"fn <T, F> (mut self, f: F) -> ImageResult<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of tranformed pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of tranformed pixels","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":269369,"byte_end":269431,"line_start":275,"line_end":275,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":271151,"byte_end":271165,"line_start":319,"line_end":319,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HDRDecoder<R>>::read_image_ldr","value":"fn (self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<u8> pixels.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":271048,"byte_end":271108,"line_start":317,"line_end":317,"column_start":5,"column_end":65}},{"value":"/ scale = 1, gamma = 2.2","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":271113,"byte_end":271139,"line_start":318,"line_end":318,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":271349,"byte_end":271363,"line_start":325,"line_end":325,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HDRDecoder<R>>::read_image_hdr","value":"fn (self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.\n \n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<f32> pixels.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":271267,"byte_end":271328,"line_start":323,"line_end":323,"column_start":5,"column_end":66}},{"value":"/ ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":271333,"byte_end":271337,"line_start":324,"line_end":324,"column_start":5,"column_end":9}}]},{"kind":"Struct","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":272315,"byte_end":272338,"line_start":356,"line_end":356,"column_start":12,"column_end":35},"name":"HDRImageDecoderIterator","qualname":"::hdr::hdr_decoder::HDRImageDecoderIterator","value":"HDRImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":272258,"byte_end":272303,"line_start":355,"line_end":355,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2563},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":279948,"byte_end":279959,"line_start":567,"line_end":567,"column_start":12,"column_end":23},"name":"HDRMetadata","qualname":"::hdr::hdr_decoder::HDRMetadata","value":"HDRMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[{"value":"/ Metadata for Radiance HDR image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":279877,"byte_end":279912,"line_start":565,"line_end":565,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2564},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280099,"byte_end":280104,"line_start":570,"line_end":570,"column_start":9,"column_end":14},"name":"width","qualname":"::hdr::hdr_decoder::HDRMetadata::width","value":"u32","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length, \n or scanline count, depending on image orientation. \n","sig":null,"attributes":[{"value":"/ Width of decoded image. It could be either scanline length, ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":279966,"byte_end":280030,"line_start":568,"line_end":568,"column_start":5,"column_end":69}},{"value":"/ or scanline count, depending on image orientation. ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280035,"byte_end":280090,"line_start":569,"line_end":569,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2565},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280183,"byte_end":280189,"line_start":572,"line_end":572,"column_start":9,"column_end":15},"name":"height","qualname":"::hdr::hdr_decoder::HDRMetadata::height","value":"u32","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[{"value":"/ Height of decoded image. It depends on orientation too.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280115,"byte_end":280174,"line_start":571,"line_end":571,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280464,"byte_end":280475,"line_start":576,"line_end":576,"column_start":9,"column_end":20},"name":"orientation","qualname":"::hdr::hdr_decoder::HDRMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Orientation matrix. For standart orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[{"value":"/ Orientation matrix. For standart orientation it is ((1,0),(0,1)) - left to right, top to bottom.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280200,"byte_end":280300,"line_start":573,"line_end":573,"column_start":5,"column_end":105}},{"value":"/ First pair tells how resulting pixel coordinates change along a scanline.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280305,"byte_end":280382,"line_start":574,"line_end":574,"column_start":5,"column_end":82}},{"value":"/ Second pair tells how they change from one scanline to the next.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280387,"byte_end":280455,"line_start":575,"line_end":575,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":2567},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280676,"byte_end":280684,"line_start":579,"line_end":579,"column_start":9,"column_end":17},"name":"exposure","qualname":"::hdr::hdr_decoder::HDRMetadata::exposure","value":"enum_primitive::Option<f32>","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in watts/steradian/m^2\n Image may not contain physical data, even if this field is set. \n","sig":null,"attributes":[{"value":"/ Divide color values by exposure to get to get physical radiance in watts/steradian/m^2","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280504,"byte_end":280594,"line_start":577,"line_end":577,"column_start":5,"column_end":95}},{"value":"/ Image may not contain physical data, even if this field is set. ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280599,"byte_end":280667,"line_start":578,"line_end":578,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280902,"byte_end":280918,"line_start":582,"line_end":582,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::hdr::hdr_decoder::HDRMetadata::color_correction","value":"enum_primitive::Option<(f32, f32, f32)>","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Divide color values by corresponing tuple member (r, g, b) to get to get physical radiance in watts/steradian/m^2\n Image may not contain physical data, even if this field is set. \n","sig":null,"attributes":[{"value":"/ Divide color values by corresponing tuple member (r, g, b) to get to get physical radiance in watts/steradian/m^2","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280703,"byte_end":280820,"line_start":580,"line_end":580,"column_start":5,"column_end":122}},{"value":"/ Image may not contain physical data, even if this field is set. ","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280825,"byte_end":280893,"line_start":581,"line_end":581,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280995,"byte_end":281013,"line_start":584,"line_end":584,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::hdr::hdr_decoder::HDRMetadata::pixel_aspect_ratio","value":"enum_primitive::Option<f32>","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[{"value":"/ Pixel height divided by pixel width","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":280947,"byte_end":280986,"line_start":583,"line_end":583,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2570},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":281242,"byte_end":281259,"line_start":588,"line_end":588,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::hdr::hdr_decoder::HDRMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[{"value":"/ All lines contained in image header are put here. Ordering of lines is preserved.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":281032,"byte_end":281117,"line_start":585,"line_end":585,"column_start":5,"column_end":90}},{"value":"/ Lines in the form \"key=value\" are represented as (\"key\", \"value\").","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":281122,"byte_end":281192,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ All other lines are (\"\", \"line\")","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":281197,"byte_end":281233,"line_start":587,"line_end":587,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":290582,"byte_end":290595,"line_start":809,"line_end":809,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::hdr::hdr_decoder::read_raw_file","value":"fn <P> (path: P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[{"value":"/ Helper function for reading raw 3-channel f32 images","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":290518,"byte_end":290574,"line_start":808,"line_end":808,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":291384,"byte_end":291394,"line_start":6,"line_end":6,"column_start":12,"column_end":22},"name":"HDREncoder","qualname":"::hdr::hdr_encoder::HDREncoder","value":"HDREncoder {  }","parent":null,"children":[{"krate":0,"index":1406}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[{"value":"/ Radiance HDR encoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":291348,"byte_end":291372,"line_start":5,"line_end":5,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":291486,"byte_end":291489,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<HDREncoder<W>>::new","value":"fn (w: W) -> HDREncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[{"value":"/ Creates encoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":291455,"byte_end":291474,"line_start":11,"line_end":11,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":291676,"byte_end":291682,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"encode","qualname":"<HDREncoder<W>>::encode","value":"fn (mut self, data: &[Rgb<f32>], width: usize, height: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":291575,"byte_end":291607,"line_start":18,"line_end":18,"column_start":5,"column_end":37}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":291612,"byte_end":291664,"line_start":19,"line_end":19,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":299097,"byte_end":299105,"line_start":219,"line_end":219,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::hdr::hdr_encoder::to_rgbe8","value":"fn (pix: Rgb<f32>) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[{"value":"/ Converts ```Rgb<f32>``` into ```RGBE8Pixel```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":299040,"byte_end":299089,"line_start":218,"line_end":218,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306442,"byte_end":306453,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::image::ImageError::FormatError","value":"ImageError::FormatError(String)","parent":{"krate":0,"index":2593},"children":[],"decl_id":null,"docs":" The Image is not formatted properly\n","sig":null,"attributes":[{"value":"/ The Image is not formatted properly","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306398,"byte_end":306437,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306533,"byte_end":306547,"line_start":20,"line_end":20,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::image::ImageError::DimensionError","value":"ImageError::DimensionError","parent":{"krate":0,"index":2593},"children":[],"decl_id":null,"docs":" The Image's dimensions are either too small or too large\n","sig":null,"attributes":[{"value":"/ The Image's dimensions are either too small or too large","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306468,"byte_end":306528,"line_start":19,"line_end":19,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306609,"byte_end":306625,"line_start":23,"line_end":23,"column_start":5,"column_end":21},"name":"UnsupportedError","qualname":"::image::ImageError::UnsupportedError","value":"ImageError::UnsupportedError(String)","parent":{"krate":0,"index":2593},"children":[],"decl_id":null,"docs":" The Decoder does not support this image format\n","sig":null,"attributes":[{"value":"/ The Decoder does not support this image format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306554,"byte_end":306604,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306693,"byte_end":306709,"line_start":26,"line_end":26,"column_start":5,"column_end":21},"name":"UnsupportedColor","qualname":"::image::ImageError::UnsupportedColor","value":"ImageError::UnsupportedColor(ColorType)","parent":{"krate":0,"index":2593},"children":[],"decl_id":null,"docs":" The Decoder does not support this color type\n","sig":null,"attributes":[{"value":"/ The Decoder does not support this color type","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306640,"byte_end":306688,"line_start":25,"line_end":25,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2605},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306807,"byte_end":306820,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"NotEnoughData","qualname":"::image::ImageError::NotEnoughData","value":"ImageError::NotEnoughData","parent":{"krate":0,"index":2593},"children":[],"decl_id":null,"docs":" Not enough data was provided to the Decoder\n to decode the image\n","sig":null,"attributes":[{"value":"/ Not enough data was provided to the Decoder","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306727,"byte_end":306774,"line_start":28,"line_end":28,"column_start":5,"column_end":52}},{"value":"/ to decode the image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306779,"byte_end":306802,"line_start":29,"line_end":29,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306882,"byte_end":306889,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"IoError","qualname":"::image::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":2593},"children":[],"decl_id":null,"docs":" An I/O Error occurred while decoding the image\n","sig":null,"attributes":[{"value":"/ An I/O Error occurred while decoding the image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306827,"byte_end":306877,"line_start":32,"line_end":32,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306953,"byte_end":306961,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::image::ImageError::ImageEnd","value":"ImageError::ImageEnd","parent":{"krate":0,"index":2593},"children":[],"decl_id":null,"docs":" The end of the image has been reached\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306907,"byte_end":306948,"line_start":35,"line_end":35,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2593},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306381,"byte_end":306391,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::image::ImageError","value":"ImageError::{FormatError, DimensionError, UnsupportedError, UnsupportedColor, NotEnoughData, IoError, ImageEnd}","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2597},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2610}],"decl_id":null,"docs":" An enumeration of Image errors\n","sig":null,"attributes":[{"value":"/ An enumeration of Image errors","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306320,"byte_end":306354,"line_start":13,"line_end":13,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":308937,"byte_end":308948,"line_start":86,"line_end":86,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::image::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":308879,"byte_end":308927,"line_start":85,"line_end":85,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2615},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309093,"byte_end":309095,"line_start":92,"line_end":92,"column_start":5,"column_end":7},"name":"U8","qualname":"::image::DecodingResult::U8","value":"DecodingResult::U8(Vec<u8>)","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" A vector of unsigned bytes\n","sig":null,"attributes":[{"value":"/ A vector of unsigned bytes","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309058,"byte_end":309088,"line_start":91,"line_end":91,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2618},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309145,"byte_end":309148,"line_start":94,"line_end":94,"column_start":5,"column_end":8},"name":"U16","qualname":"::image::DecodingResult::U16","value":"DecodingResult::U16(Vec<u16>)","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" A vector of unsigned words\n","sig":null,"attributes":[{"value":"/ A vector of unsigned words","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309110,"byte_end":309140,"line_start":93,"line_end":93,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309037,"byte_end":309051,"line_start":90,"line_end":90,"column_start":10,"column_end":24},"name":"DecodingResult","qualname":"::image::DecodingResult","value":"DecodingResult::{U8, U16}","parent":null,"children":[{"krate":0,"index":2615},{"krate":0,"index":2618}],"decl_id":null,"docs":" Result of a decoding process\n","sig":null,"attributes":[{"value":"/ Result of a decoding process","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":308978,"byte_end":309010,"line_start":88,"line_end":88,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2624},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309545,"byte_end":309548,"line_start":110,"line_end":110,"column_start":5,"column_end":8},"name":"PNG","qualname":"::image::ImageFormat::PNG","value":"ImageFormat::PNG","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309514,"byte_end":309540,"line_start":109,"line_end":109,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2626},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309587,"byte_end":309591,"line_start":113,"line_end":113,"column_start":5,"column_end":9},"name":"JPEG","qualname":"::image::ImageFormat::JPEG","value":"ImageFormat::JPEG","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309555,"byte_end":309582,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309629,"byte_end":309632,"line_start":116,"line_end":116,"column_start":5,"column_end":8},"name":"GIF","qualname":"::image::ImageFormat::GIF","value":"ImageFormat::GIF","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309598,"byte_end":309624,"line_start":115,"line_end":115,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2630},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309671,"byte_end":309675,"line_start":119,"line_end":119,"column_start":5,"column_end":9},"name":"WEBP","qualname":"::image::ImageFormat::WEBP","value":"ImageFormat::WEBP","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309639,"byte_end":309666,"line_start":118,"line_end":118,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2632},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309713,"byte_end":309716,"line_start":122,"line_end":122,"column_start":5,"column_end":8},"name":"PPM","qualname":"::image::ImageFormat::PPM","value":"ImageFormat::PPM","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" An Image in PPM Format\n","sig":null,"attributes":[{"value":"/ An Image in PPM Format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309682,"byte_end":309708,"line_start":121,"line_end":121,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2634},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309755,"byte_end":309759,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"TIFF","qualname":"::image::ImageFormat::TIFF","value":"ImageFormat::TIFF","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309723,"byte_end":309750,"line_start":124,"line_end":124,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2636},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309797,"byte_end":309800,"line_start":128,"line_end":128,"column_start":5,"column_end":8},"name":"TGA","qualname":"::image::ImageFormat::TGA","value":"ImageFormat::TGA","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309766,"byte_end":309792,"line_start":127,"line_end":127,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2638},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309838,"byte_end":309841,"line_start":131,"line_end":131,"column_start":5,"column_end":8},"name":"BMP","qualname":"::image::ImageFormat::BMP","value":"ImageFormat::BMP","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309807,"byte_end":309833,"line_start":130,"line_end":130,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2640},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309879,"byte_end":309882,"line_start":134,"line_end":134,"column_start":5,"column_end":8},"name":"ICO","qualname":"::image::ImageFormat::ICO","value":"ImageFormat::ICO","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309848,"byte_end":309874,"line_start":133,"line_end":133,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309929,"byte_end":309932,"line_start":137,"line_end":137,"column_start":5,"column_end":8},"name":"HDR","qualname":"::image::ImageFormat::HDR","value":"ImageFormat::HDR","parent":{"krate":0,"index":2623},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309889,"byte_end":309924,"line_start":136,"line_end":136,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":2623},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309496,"byte_end":309507,"line_start":108,"line_end":108,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"ImageFormat::{PNG, JPEG, GIF, WEBP, PPM, TIFF, TGA, BMP, ICO, HDR}","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2628},{"krate":0,"index":2630},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2638},{"krate":0,"index":2640},{"krate":0,"index":2642}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309339,"byte_end":309385,"line_start":105,"line_end":105,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309386,"byte_end":309441,"line_start":106,"line_end":106,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309989,"byte_end":310001,"line_start":141,"line_end":141,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder: Sized","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":309937,"byte_end":309978,"line_start":140,"line_end":140,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310087,"byte_end":310097,"line_start":143,"line_end":143,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"fn (&mut self) -> ImageResult<(u32, u32)>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310015,"byte_end":310079,"line_start":142,"line_end":142,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310212,"byte_end":310221,"line_start":146,"line_end":146,"column_start":8,"column_end":17},"name":"colortype","qualname":"::image::ImageDecoder::colortype","value":"fn (&mut self) -> ImageResult<ColorType>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":" Returns the color type of the image e.g. RGB(8) (8bit RGB)\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image e.g. RGB(8) (8bit RGB)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310142,"byte_end":310204,"line_start":145,"line_end":145,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310336,"byte_end":310343,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"row_len","qualname":"::image::ImageDecoder::row_len","value":"fn (&mut self) -> ImageResult<usize>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":" Returns the length in bytes of one decoded row of the image\n","sig":null,"attributes":[{"value":"/ Returns the length in bytes of one decoded row of the image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310265,"byte_end":310328,"line_start":148,"line_end":148,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310464,"byte_end":310477,"line_start":152,"line_end":152,"column_start":8,"column_end":21},"name":"read_scanline","qualname":"::image::ImageDecoder::read_scanline","value":"fn (&mut self, buf: &mut [u8]) -> ImageResult<u32>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":" Reads one row from the image into ```buf``` and returns the row index\n","sig":null,"attributes":[{"value":"/ Reads one row from the image into ```buf``` and returns the row index","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310383,"byte_end":310456,"line_start":151,"line_end":151,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310593,"byte_end":310603,"line_start":155,"line_end":155,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"fn (&mut self) -> ImageResult<DecodingResult>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":" Decodes the entire image and return it as a Vector\n","sig":null,"attributes":[{"value":"/ Decodes the entire image and return it as a Vector","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310531,"byte_end":310585,"line_start":154,"line_end":154,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310701,"byte_end":310712,"line_start":158,"line_end":158,"column_start":8,"column_end":19},"name":"is_animated","qualname":"::image::ImageDecoder::is_animated","value":"fn (&mut self) -> ImageResult<bool>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":" Returns true if the image is animated\n","sig":null,"attributes":[{"value":"/ Returns true if the image is animated","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310652,"byte_end":310693,"line_start":157,"line_end":157,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310998,"byte_end":311009,"line_start":167,"line_end":167,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::ImageDecoder::into_frames","value":"fn (self) -> ImageResult<Frames>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":" Returns the frames of the image","sig":null,"attributes":[{"value":"/ Returns the frames of the image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310884,"byte_end":310919,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310924,"byte_end":310927,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If the image is not animated it returns a single frame","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310932,"byte_end":310990,"line_start":166,"line_end":166,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":311318,"byte_end":311327,"line_start":175,"line_end":175,"column_start":8,"column_end":17},"name":"load_rect","qualname":"::image::ImageDecoder::load_rect","value":"fn (&mut self, x: u32, y: u32, length: u32, width: u32) -> ImageResult<Vec<u8>>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":" Decodes a specific region of the image, represented by the rectangle\n starting from ```x``` and ```y``` and having ```length``` and ```width```\n","sig":null,"attributes":[{"value":"/ Decodes a specific region of the image, represented by the rectangle","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":311156,"byte_end":311228,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ starting from ```x``` and ```y``` and having ```length``` and ```width```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":311233,"byte_end":311310,"line_start":174,"line_end":174,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":312372,"byte_end":312378,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":312332,"byte_end":312360,"line_start":216,"line_end":216,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":313159,"byte_end":313168,"line_start":250,"line_end":250,"column_start":12,"column_end":21},"name":"MutPixels","qualname":"::image::MutPixels","value":"MutPixels {  }","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507}],"decl_id":null,"docs":" Mutable pixel iterator","sig":null,"attributes":[{"value":"/ Mutable pixel iterator","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":312969,"byte_end":312995,"line_start":247,"line_end":247,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":312996,"byte_end":312999,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ DEPRECATED: It is currently not possible to create a safe iterator for this in Rust. You have to use an iterator over the image buffer instead.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":313000,"byte_end":313147,"line_start":249,"line_end":249,"column_start":1,"column_end":148}}]},{"kind":"Trait","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314212,"byte_end":314224,"line_start":291,"line_end":291,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: Sized","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1530}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314165,"byte_end":314201,"line_start":290,"line_end":290,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314270,"byte_end":314275,"line_start":293,"line_end":293,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImage::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314238,"byte_end":314260,"line_start":292,"line_end":292,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314336,"byte_end":314346,"line_start":296,"line_end":296,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImage::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314289,"byte_end":314328,"line_start":295,"line_end":295,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314410,"byte_end":314415,"line_start":299,"line_end":299,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImage::width","value":"fn (&self) -> u32","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314374,"byte_end":314402,"line_start":298,"line_end":298,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314530,"byte_end":314536,"line_start":305,"line_end":305,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImage::height","value":"fn (&self) -> u32","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314493,"byte_end":314522,"line_start":304,"line_end":304,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314663,"byte_end":314669,"line_start":311,"line_end":311,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImage::bounds","value":"fn (&self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314614,"byte_end":314655,"line_start":310,"line_end":310,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314786,"byte_end":314795,"line_start":314,"line_end":314,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImage::in_bounds","value":"fn (&self, x: u32, y: u32) -> bool","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314707,"byte_end":314778,"line_start":313,"line_end":313,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315220,"byte_end":315229,"line_start":332,"line_end":332,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImage::get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315045,"byte_end":315084,"line_start":325,"line_end":325,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315089,"byte_end":315092,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315097,"byte_end":315109,"line_start":327,"line_end":327,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315114,"byte_end":315117,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315122,"byte_end":315162,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315167,"byte_end":315170,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ TODO: change this signature to &P","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315175,"byte_end":315212,"line_start":331,"line_end":331,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315395,"byte_end":315408,"line_start":339,"line_end":339,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut Self::Pixel","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315274,"byte_end":315309,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315314,"byte_end":315317,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315322,"byte_end":315334,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315339,"byte_end":315342,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315347,"byte_end":315387,"line_start":338,"line_end":338,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315604,"byte_end":315620,"line_start":344,"line_end":344,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImage::unsafe_get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315462,"byte_end":315501,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315506,"byte_end":315509,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315514,"byte_end":315589,"line_start":343,"line_end":343,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315821,"byte_end":315830,"line_start":353,"line_end":353,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315701,"byte_end":315735,"line_start":348,"line_end":348,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315740,"byte_end":315743,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315748,"byte_end":315760,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315765,"byte_end":315768,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315773,"byte_end":315813,"line_start":352,"line_end":352,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316022,"byte_end":316038,"line_start":358,"line_end":358,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315884,"byte_end":315919,"line_start":355,"line_end":355,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315924,"byte_end":315927,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":315932,"byte_end":316007,"line_start":357,"line_end":357,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316305,"byte_end":316316,"line_start":365,"line_end":365,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316136,"byte_end":316206,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316211,"byte_end":316214,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316219,"byte_end":316297,"line_start":364,"line_end":364,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316521,"byte_end":316527,"line_start":370,"line_end":370,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImage::pixels","value":"fn (&self) -> Pixels<Self>","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316370,"byte_end":316424,"line_start":367,"line_end":367,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316429,"byte_end":316482,"line_start":368,"line_end":368,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316487,"byte_end":316513,"line_start":369,"line_end":369,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317049,"byte_end":317059,"line_start":387,"line_end":387,"column_start":8,"column_end":18},"name":"pixels_mut","qualname":"::image::GenericImage::pixels_mut","value":"fn (&mut self) -> MutPixels<Self>","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Returns an Iterator over mutable pixels of this image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.","sig":null,"attributes":[{"value":"/ Returns an Iterator over mutable pixels of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316768,"byte_end":316826,"line_start":382,"line_end":382,"column_start":5,"column_end":63}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316831,"byte_end":316884,"line_start":383,"line_end":383,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316889,"byte_end":316932,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316937,"byte_end":316940,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This cannot be implemented safely in Rust. Please use the image buffer directly.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":316945,"byte_end":317041,"line_start":386,"line_end":386,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317719,"byte_end":317728,"line_start":409,"line_end":409,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"fn <O> (&mut self, other: &O, x: u32, y: u32) -> bool","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317310,"byte_end":317374,"line_start":399,"line_end":399,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317379,"byte_end":317382,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317387,"byte_end":317448,"line_start":401,"line_end":401,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317453,"byte_end":317486,"line_start":402,"line_end":402,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317491,"byte_end":317494,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a pice of the other image, use `sub_image`.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317499,"byte_end":317568,"line_start":404,"line_end":404,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317573,"byte_end":317576,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317581,"byte_end":317594,"line_start":406,"line_end":406,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317599,"byte_end":317668,"line_start":407,"line_end":407,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":317673,"byte_end":317711,"line_start":408,"line_end":408,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":318450,"byte_end":318459,"line_start":431,"line_end":431,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"fn <'a> (&'a mut self, x: u32, y: u32, width: u32, height: u32) -> SubImage<'a, Self>","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Returns a subimage that is a view into this image.\n","sig":null,"attributes":[{"value":"/ Returns a subimage that is a view into this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":318388,"byte_end":318442,"line_start":430,"line_end":430,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":318739,"byte_end":318747,"line_start":440,"line_end":440,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539}],"decl_id":null,"docs":" A View into another image\n","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":318698,"byte_end":318727,"line_start":439,"line_end":439,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":319108,"byte_end":319111,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage>::new","value":"fn (image: &mut I, x: u32, y: u32, width: u32, height: u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":319068,"byte_end":319096,"line_start":453,"line_end":453,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":319423,"byte_end":319432,"line_start":465,"line_end":465,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<SubImage>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the wrapped image.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the wrapped image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":319358,"byte_end":319411,"line_start":464,"line_end":464,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":319550,"byte_end":319563,"line_start":470,"line_end":470,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage>::change_bounds","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":319494,"byte_end":319538,"line_start":469,"line_end":469,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":319797,"byte_end":319805,"line_start":478,"line_end":478,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage>::to_image","value":"fn (&self) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":319742,"byte_end":319785,"line_start":477,"line_end":477,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2716},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":338988,"byte_end":338998,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":338941,"byte_end":338983,"line_start":46,"line_end":46,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":339074,"byte_end":339085,"line_start":50,"line_end":50,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":339016,"byte_end":339069,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2722},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":339154,"byte_end":339163,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":339108,"byte_end":339149,"line_start":52,"line_end":52,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2725},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":339237,"byte_end":339247,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":339180,"byte_end":339232,"line_start":55,"line_end":55,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":2715},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":338922,"byte_end":338934,"line_start":45,"line_end":45,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"DynamicImage::{ImageLuma8, ImageLumaA8, ImageRgb8, ImageRgba8}","parent":null,"children":[{"krate":0,"index":2716},{"krate":0,"index":2719},{"krate":0,"index":2722},{"krate":0,"index":2725}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":338876,"byte_end":338895,"line_start":43,"line_end":43,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341330,"byte_end":341339,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341256,"byte_end":341318,"line_start":98,"line_end":98,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341542,"byte_end":341553,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341442,"byte_end":341496,"line_start":103,"line_end":103,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341501,"byte_end":341530,"line_start":104,"line_end":104,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341730,"byte_end":341738,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341657,"byte_end":341718,"line_start":109,"line_end":109,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341914,"byte_end":341923,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341840,"byte_end":341902,"line_start":114,"line_end":114,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":342087,"byte_end":342093,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"fn (&self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":342026,"byte_end":342075,"line_start":119,"line_end":119,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":342262,"byte_end":342269,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"fn (&self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":342200,"byte_end":342250,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":342438,"byte_end":342445,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"fn (&self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":342377,"byte_end":342426,"line_start":133,"line_end":133,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":342615,"byte_end":342628,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"fn (&self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":342553,"byte_end":342603,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":342824,"byte_end":342828,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut out of this image delimited by the bounding rectangle.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":342741,"byte_end":342812,"line_start":147,"line_end":147,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":343122,"byte_end":343129,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"fn (&self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":343067,"byte_end":343110,"line_start":157,"line_end":157,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":343372,"byte_end":343383,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"fn (&mut self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":343309,"byte_end":343360,"line_start":165,"line_end":165,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":343635,"byte_end":343643,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"fn (&self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":343579,"byte_end":343623,"line_start":173,"line_end":173,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":343891,"byte_end":343903,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"fn (&mut self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":343827,"byte_end":343879,"line_start":181,"line_end":181,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":344163,"byte_end":344171,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"fn (&self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":344102,"byte_end":344151,"line_start":189,"line_end":189,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":344425,"byte_end":344437,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"fn (&mut self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":344356,"byte_end":344413,"line_start":197,"line_end":197,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":344719,"byte_end":344733,"line_start":206,"line_end":206,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"fn (&self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":344636,"byte_end":344707,"line_start":205,"line_end":205,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":345015,"byte_end":345033,"line_start":214,"line_end":214,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"fn (&mut self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":344924,"byte_end":345003,"line_start":213,"line_end":213,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":345299,"byte_end":345309,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"raw_pixels","qualname":"<DynamicImage>::raw_pixels","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":345239,"byte_end":345287,"line_start":221,"line_end":221,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":345417,"byte_end":345422,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"fn (&self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":345370,"byte_end":345405,"line_start":226,"line_end":226,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":345832,"byte_end":345841,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":345775,"byte_end":345820,"line_start":236,"line_end":236,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":346371,"byte_end":346377,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":346285,"byte_end":346321,"line_start":246,"line_end":246,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":346326,"byte_end":346359,"line_start":247,"line_end":247,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":346741,"byte_end":346747,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":346464,"byte_end":346523,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":346528,"byte_end":346591,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":346596,"byte_end":346658,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":346663,"byte_end":346729,"line_start":255,"line_end":255,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":347565,"byte_end":347577,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":347363,"byte_end":347422,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":347427,"byte_end":347483,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":347488,"byte_end":347553,"line_start":280,"line_end":280,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":347939,"byte_end":347943,"line_start":291,"line_end":291,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"fn (&self, sigma: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":347827,"byte_end":347870,"line_start":289,"line_end":289,"column_start":5,"column_end":48}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":347875,"byte_end":347927,"line_start":290,"line_end":290,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348319,"byte_end":348328,"line_start":300,"line_end":300,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"fn (&self, sigma: f32, threshold: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348055,"byte_end":348100,"line_start":295,"line_end":295,"column_start":5,"column_end":50}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348105,"byte_end":348156,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ ```threshold``` is a control of how much to sharpen.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348161,"byte_end":348217,"line_start":297,"line_end":297,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348222,"byte_end":348225,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ See https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348230,"byte_end":348307,"line_start":299,"line_end":299,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348537,"byte_end":348546,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"fn (&self, kernel: &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348472,"byte_end":348525,"line_start":304,"line_end":304,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348956,"byte_end":348971,"line_start":316,"line_end":316,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"fn (&self, c: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348753,"byte_end":348791,"line_start":313,"line_end":313,"column_start":5,"column_end":43}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348796,"byte_end":348855,"line_start":314,"line_end":314,"column_start":5,"column_end":64}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":348860,"byte_end":348944,"line_start":315,"line_end":315,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349271,"byte_end":349279,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349079,"byte_end":349117,"line_start":320,"line_end":320,"column_start":5,"column_end":43}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349122,"byte_end":349178,"line_start":321,"line_end":321,"column_start":5,"column_end":61}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349183,"byte_end":349259,"line_start":322,"line_end":322,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349627,"byte_end":349636,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349395,"byte_end":349429,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349434,"byte_end":349485,"line_start":328,"line_end":328,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349490,"byte_end":349559,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349564,"byte_end":349615,"line_start":330,"line_end":330,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349795,"byte_end":349800,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349753,"byte_end":349783,"line_start":335,"line_end":335,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349946,"byte_end":349951,"line_start":341,"line_end":341,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":349902,"byte_end":349934,"line_start":340,"line_end":340,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":350110,"byte_end":350118,"line_start":346,"line_end":346,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":350055,"byte_end":350098,"line_start":345,"line_end":345,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":350271,"byte_end":350280,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":350215,"byte_end":350259,"line_start":350,"line_end":350,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":350434,"byte_end":350443,"line_start":356,"line_end":356,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":350378,"byte_end":350422,"line_start":355,"line_end":355,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":350598,"byte_end":350602,"line_start":361,"line_end":361,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"fn <W> (&self, w: &mut W, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":350541,"byte_end":350586,"line_start":360,"line_end":360,"column_start":5,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":356937,"byte_end":356941,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"fn <P> (path: P) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.\n","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":356811,"byte_end":356860,"line_start":534,"line_end":534,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":356861,"byte_end":356929,"line_start":535,"line_end":535,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":358505,"byte_end":358516,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":358151,"byte_end":358213,"line_start":573,"line_end":573,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":358214,"byte_end":358217,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":358218,"byte_end":358304,"line_start":575,"line_end":575,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":358305,"byte_end":358366,"line_start":576,"line_end":576,"column_start":1,"column_end":62}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":358368,"byte_end":358459,"line_start":578,"line_end":578,"column_start":1,"column_end":92}},{"value":"/ jpeg and png files are supported.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":358460,"byte_end":358497,"line_start":579,"line_end":579,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":359835,"byte_end":359839,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"load","qualname":"::dynimage::load","value":"fn <R> (r: R, format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader\n","sig":null,"attributes":[{"value":"/ Create a new image from a Reader","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":359791,"byte_end":359827,"line_start":609,"line_end":609,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":361848,"byte_end":361864,"line_start":654,"line_end":654,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"fn (buffer: &[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":361701,"byte_end":361741,"line_start":650,"line_end":650,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":361742,"byte_end":361745,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":361746,"byte_end":361797,"line_start":652,"line_end":652,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":361798,"byte_end":361840,"line_start":653,"line_end":653,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":362050,"byte_end":362078,"line_start":661,"line_end":661,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"fn (buf: &[u8], format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice\n","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":361984,"byte_end":362024,"line_start":659,"line_end":659,"column_start":1,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":362025,"byte_end":362042,"line_start":660,"line_end":660,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1755},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":362461,"byte_end":362473,"line_start":671,"line_end":671,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::dynimage::guess_format","value":"fn (buffer: &[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":362200,"byte_end":362240,"line_start":666,"line_end":666,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":362241,"byte_end":362244,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":362245,"byte_end":362338,"line_start":668,"line_end":668,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":362339,"byte_end":362381,"line_start":669,"line_end":669,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":362382,"byte_end":362453,"line_start":670,"line_end":670,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363531,"byte_end":363535,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Gray","qualname":"::color::ColorType::Gray","value":"ColorType::Gray(u8)","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" Pixel is grayscale\n","sig":null,"attributes":[{"value":"/ Pixel is grayscale","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363504,"byte_end":363526,"line_start":11,"line_end":11,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363589,"byte_end":363592,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"RGB","qualname":"::color::ColorType::RGB","value":"ColorType::RGB(u8)","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" Pixel contains R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains R, G and B channels","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363546,"byte_end":363584,"line_start":14,"line_end":14,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363650,"byte_end":363657,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"Palette","qualname":"::color::ColorType::Palette","value":"ColorType::Palette(u8)","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" Pixel is an index into a color palette\n","sig":null,"attributes":[{"value":"/ Pixel is an index into a color palette","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363603,"byte_end":363645,"line_start":17,"line_end":17,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363717,"byte_end":363722,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"GrayA","qualname":"::color::ColorType::GrayA","value":"ColorType::GrayA(u8)","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" Pixel is grayscale with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is grayscale with an alpha channel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363668,"byte_end":363712,"line_start":20,"line_end":20,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2743},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363776,"byte_end":363780,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::color::ColorType::RGBA","value":"ColorType::RGBA(u8)","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" Pixel is RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is RGB with an alpha channel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363733,"byte_end":363771,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363488,"byte_end":363497,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"ColorType::{Gray, RGB, Palette, GrayA, RGBA}","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2740},{"krate":0,"index":2743}],"decl_id":null,"docs":" An enumeration over supported color types and their bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and their bit depths","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":363367,"byte_end":363433,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2946},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368634,"byte_end":368637,"line_start":212,"line_end":212,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"Rgb { data }","parent":null,"children":[{"krate":0,"index":2948}],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364785,"byte_end":364795,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364796,"byte_end":364818,"line_start":65,"line_end":65,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2758},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368634,"byte_end":368637,"line_start":212,"line_end":212,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"fn <T> (data: [T; 3]) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364880,"byte_end":364918,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2974},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368684,"byte_end":368688,"line_start":213,"line_end":213,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"Luma { data }","parent":null,"children":[{"krate":0,"index":2976}],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364785,"byte_end":364795,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364796,"byte_end":364818,"line_start":65,"line_end":65,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368684,"byte_end":368688,"line_start":213,"line_end":213,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"fn <T> (data: [T; 1]) -> Luma<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364880,"byte_end":364918,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3002},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368740,"byte_end":368744,"line_start":214,"line_end":214,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"Rgba { data }","parent":null,"children":[{"krate":0,"index":3004}],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364785,"byte_end":364795,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364796,"byte_end":364818,"line_start":65,"line_end":65,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368740,"byte_end":368744,"line_start":214,"line_end":214,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"fn <T> (data: [T; 4]) -> Rgba<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364880,"byte_end":364918,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3030},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368809,"byte_end":368814,"line_start":215,"line_end":215,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"LumaA { data }","parent":null,"children":[{"krate":0,"index":3032}],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364785,"byte_end":364795,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364796,"byte_end":364818,"line_start":65,"line_end":65,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2899},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368809,"byte_end":368814,"line_start":215,"line_end":215,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"fn <T> (data: [T; 2]) -> LumaA<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":364880,"byte_end":364918,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1769},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368956,"byte_end":368965,"line_start":220,"line_end":220,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":1771}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368884,"byte_end":368945,"line_start":219,"line_end":219,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":369055,"byte_end":369065,"line_start":222,"line_end":222,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"fn (&mut self, &Other) -> ()","parent":{"krate":0,"index":1769},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":368979,"byte_end":369047,"line_start":221,"line_end":221,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":377835,"byte_end":377840,"line_start":17,"line_end":17,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::buffer::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1887},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1895}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":377710,"byte_end":377734,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":377735,"byte_end":377738,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":377739,"byte_end":377824,"line_start":16,"line_end":16,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":377904,"byte_end":377912,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::buffer::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[{"value":"/ The underlying subpixel type.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":377861,"byte_end":377894,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":377992,"byte_end":378005,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::buffer::Pixel::channel_count","value":"fn () -> u8","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ Returns the number of channels of this pixel type.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":377930,"byte_end":377984,"line_start":21,"line_end":21,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378066,"byte_end":378074,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"channels","qualname":"::buffer::Pixel::channels","value":"fn (&self) -> &[Self::Subpixel]","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378020,"byte_end":378058,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378162,"byte_end":378174,"line_start":28,"line_end":28,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::buffer::Pixel::channels_mut","value":"fn (&mut self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378109,"byte_end":378154,"line_start":27,"line_end":27,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378346,"byte_end":378357,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"color_model","qualname":"::buffer::Pixel::color_model","value":"fn () -> &'static str","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Returns a string that can help to interprete the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ Returns a string that can help to interprete the meaning each channel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378217,"byte_end":378290,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378295,"byte_end":378338,"line_start":31,"line_end":31,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378437,"byte_end":378447,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"color_type","qualname":"::buffer::Pixel::color_type","value":"fn () -> ColorType","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ Returns the ColorType for this pixel format","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378382,"byte_end":378429,"line_start":34,"line_end":34,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378653,"byte_end":378662,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"channels4","qualname":"::buffer::Pixel::channels4","value":"fn (&self) -> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378469,"byte_end":378534,"line_start":37,"line_end":37,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378539,"byte_end":378614,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378619,"byte_end":378622,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378627,"byte_end":378645,"line_start":40,"line_end":40,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378911,"byte_end":378924,"line_start":47,"line_end":47,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::buffer::Pixel::from_channels","value":"fn (a: Self::Subpixel, b: Self::Subpixel, c: Self::Subpixel, d: Self::Subpixel) -> Self","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378744,"byte_end":378800,"line_start":43,"line_end":43,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378805,"byte_end":378872,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378877,"byte_end":378880,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":378885,"byte_end":378903,"line_start":46,"line_end":46,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379239,"byte_end":379249,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::buffer::Pixel::from_slice","value":"fn <'a> (slice: &'a [Self::Subpixel]) -> &'a Self","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379015,"byte_end":379047,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379052,"byte_end":379055,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379060,"byte_end":379144,"line_start":51,"line_end":51,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to precent panics if the pixel is used later on.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379149,"byte_end":379231,"line_start":52,"line_end":52,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379539,"byte_end":379553,"line_start":59,"line_end":59,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::buffer::Pixel::from_slice_mut","value":"fn <'a> (slice: &'a mut [Self::Subpixel]) -> &'a mut Self","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379301,"byte_end":379347,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379352,"byte_end":379355,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379360,"byte_end":379444,"line_start":57,"line_end":57,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to precent panics if the pixel is used later on.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379449,"byte_end":379531,"line_start":58,"line_end":58,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379650,"byte_end":379656,"line_start":62,"line_end":62,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::buffer::Pixel::to_rgb","value":"fn (&self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379613,"byte_end":379642,"line_start":61,"line_end":61,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379752,"byte_end":379759,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::buffer::Pixel::to_rgba","value":"fn (&self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379693,"byte_end":379744,"line_start":64,"line_end":64,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379835,"byte_end":379842,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::buffer::Pixel::to_luma","value":"fn (&self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379797,"byte_end":379827,"line_start":67,"line_end":67,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379940,"byte_end":379953,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::buffer::Pixel::to_luma_alpha","value":"fn (&self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379880,"byte_end":379932,"line_start":70,"line_end":70,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380061,"byte_end":380064,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"map","qualname":"::buffer::Pixel::map","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":379992,"byte_end":380053,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380210,"byte_end":380215,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"apply","qualname":"::buffer::Pixel::apply","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380141,"byte_end":380202,"line_start":76,"line_end":76,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380425,"byte_end":380439,"line_start":81,"line_end":81,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::buffer::Pixel::map_with_alpha","value":"fn <F, G> (&self, f: F, g: G) -> Self","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380288,"byte_end":380360,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380365,"byte_end":380417,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380727,"byte_end":380743,"line_start":86,"line_end":86,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::buffer::Pixel::apply_with_alpha","value":"fn <F, G> (&mut self, f: F, g: G) -> ()","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380574,"byte_end":380646,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380651,"byte_end":380719,"line_start":85,"line_end":85,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380976,"byte_end":380980,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"map2","qualname":"::buffer::Pixel::map2","value":"fn <F> (&self, other: &Self, f: F) -> Self","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380874,"byte_end":380938,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":380943,"byte_end":380968,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381213,"byte_end":381219,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"apply2","qualname":"::buffer::Pixel::apply2","value":"fn <F> (&mut self, other: &Self, f: F) -> ()","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381095,"byte_end":381159,"line_start":94,"line_end":94,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381164,"byte_end":381205,"line_start":95,"line_end":95,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381359,"byte_end":381365,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"invert","qualname":"::buffer::Pixel::invert","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381330,"byte_end":381351,"line_start":99,"line_end":99,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381476,"byte_end":381481,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"blend","qualname":"::buffer::Pixel::blend","value":"fn (&mut self, other: &Self) -> ()","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381383,"byte_end":381468,"line_start":102,"line_end":102,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381551,"byte_end":381557,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":1899}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381511,"byte_end":381539,"line_start":106,"line_end":106,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1911},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":382200,"byte_end":382209,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":1914}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":382152,"byte_end":382188,"line_start":132,"line_end":132,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":382881,"byte_end":382896,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":382832,"byte_end":382869,"line_start":157,"line_end":157,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1938},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":383549,"byte_end":383567,"line_start":184,"line_end":184,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":383500,"byte_end":383537,"line_start":183,"line_end":183,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":384238,"byte_end":384249,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064}],"decl_id":null,"docs":" Generic image buffer\n","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":384185,"byte_end":384209,"line_start":209,"line_end":209,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":384733,"byte_end":384741,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"fn (width: u32, height: u32, buf: Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":384569,"byte_end":384616,"line_start":224,"line_end":224,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":384621,"byte_end":384657,"line_start":225,"line_end":225,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":384662,"byte_end":384665,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns None if the container is not big enough","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":384670,"byte_end":384721,"line_start":227,"line_end":227,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385253,"byte_end":385261,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"fn (self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385204,"byte_end":385241,"line_start":245,"line_end":245,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385363,"byte_end":385373,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385312,"byte_end":385351,"line_start":250,"line_end":250,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385482,"byte_end":385487,"line_start":256,"line_end":256,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385442,"byte_end":385470,"line_start":255,"line_end":255,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385575,"byte_end":385581,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385534,"byte_end":385563,"line_start":260,"line_end":260,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385695,"byte_end":385701,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"fn <'a> (&'a self) -> Pixels<'a, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385629,"byte_end":385683,"line_start":265,"line_end":265,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386034,"byte_end":386050,"line_start":277,"line_end":277,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"fn <'a> (&'a self) -> EnumeratePixels<'a, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385880,"byte_end":385924,"line_start":274,"line_end":274,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385929,"byte_end":385982,"line_start":275,"line_end":275,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":385987,"byte_end":386022,"line_start":276,"line_end":276,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386407,"byte_end":386416,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"fn (&self, x: u32, y: u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386241,"byte_end":386295,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386300,"byte_end":386303,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386308,"byte_end":386320,"line_start":288,"line_end":288,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386325,"byte_end":386328,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386333,"byte_end":386395,"line_start":290,"line_end":290,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":387028,"byte_end":387038,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"fn (&mut self) -> PixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386848,"byte_end":386910,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386915,"byte_end":386968,"line_start":306,"line_end":306,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386973,"byte_end":387016,"line_start":307,"line_end":307,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":387276,"byte_end":387296,"line_start":317,"line_end":317,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"fn <'a> (&'a mut self) -> EnumeratePixelsMut<'a, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":387220,"byte_end":387264,"line_start":316,"line_end":316,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":387702,"byte_end":387715,"line_start":332,"line_end":332,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":387528,"byte_end":387590,"line_start":327,"line_end":327,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":387595,"byte_end":387598,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":387603,"byte_end":387615,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":387620,"byte_end":387623,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":387628,"byte_end":387690,"line_start":331,"line_end":331,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388152,"byte_end":388161,"line_start":345,"line_end":345,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388003,"byte_end":388040,"line_start":340,"line_end":340,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388045,"byte_end":388048,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388053,"byte_end":388065,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388070,"byte_end":388073,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388078,"byte_end":388140,"line_start":344,"line_end":344,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388569,"byte_end":388573,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"fn <Q> (&self, path: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388378,"byte_end":388431,"line_start":353,"line_end":353,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388436,"byte_end":388439,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388444,"byte_end":388500,"line_start":355,"line_end":355,"column_start":5,"column_end":61}},{"value":"/ Currently only jpeg and png files are supported.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388505,"byte_end":388557,"line_start":356,"line_end":356,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":392811,"byte_end":392814,"line_start":490,"line_end":490,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"fn (width: u32, height: u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.\n","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":392738,"byte_end":392799,"line_start":489,"line_end":489,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":393282,"byte_end":393292,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"fn (width: u32, height: u32, pixel: P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel\n","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":393219,"byte_end":393270,"line_start":503,"line_end":503,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":393704,"byte_end":393711,"line_start":515,"line_end":515,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"fn <F> (width: u32, height: u32, f: F) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.\n The arguments to the function are the pixel's x and y coordinates.\n","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":393535,"byte_end":393617,"line_start":513,"line_end":513,"column_start":5,"column_end":87}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":393622,"byte_end":393692,"line_start":514,"line_end":514,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394143,"byte_end":394151,"line_start":527,"line_end":527,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"fn (width: u32, height: u32, buf: Vec<P::Subpixel>) -> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394023,"byte_end":394077,"line_start":525,"line_end":525,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394082,"byte_end":394131,"line_start":526,"line_end":526,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394427,"byte_end":394435,"line_start":534,"line_end":534,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"fn (self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394327,"byte_end":394388,"line_start":532,"line_end":532,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394393,"byte_end":394415,"line_start":533,"line_end":533,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394563,"byte_end":394576,"line_start":540,"line_end":540,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":2022}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394497,"byte_end":394552,"line_start":539,"line_end":539,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394762,"byte_end":394769,"line_start":545,"line_end":545,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer::ConvertBuffer::convert","value":"fn (&self) -> T","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394586,"byte_end":394627,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394632,"byte_end":394635,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ A generic impementation is provided to convert any image buffer to a image buffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394640,"byte_end":394725,"line_start":543,"line_end":543,"column_start":5,"column_end":90}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394730,"byte_end":394754,"line_start":544,"line_end":544,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":395037,"byte_end":395051,"line_start":553,"line_end":553,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"fn (self, palette: &[(u8, u8, u8)], transparent_idx: Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394847,"byte_end":394907,"line_start":550,"line_end":550,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394912,"byte_end":394980,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394985,"byte_end":395025,"line_start":552,"line_end":552,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2033},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":397025,"byte_end":397033,"line_start":605,"line_end":605,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":396986,"byte_end":397015,"line_start":604,"line_end":604,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":397122,"byte_end":397131,"line_start":607,"line_end":607,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":397067,"byte_end":397112,"line_start":606,"line_end":606,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":397211,"byte_end":397220,"line_start":609,"line_end":609,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":397166,"byte_end":397201,"line_start":608,"line_end":608,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2036},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":397316,"byte_end":397330,"line_start":611,"line_end":611,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":397255,"byte_end":397306,"line_start":610,"line_end":610,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/traits.rs","byte_start":399034,"byte_end":399043,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[{"value":"/ Primitive trait from old stdlib","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/traits.rs","byte_start":398988,"byte_end":399023,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":399539,"byte_end":399545,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2060}],"decl_id":null,"docs":" Holds the frames of the animated image\n","sig":null,"attributes":[{"value":"/ Holds the frames of the animated image","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":399485,"byte_end":399527,"line_start":5,"line_end":5,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":399665,"byte_end":399668,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"fn (frames: Vec<Frame>) -> Frames","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame iterator\n","sig":null,"attributes":[{"value":"/ Contructs a new frame iterator","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":399619,"byte_end":399653,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3069},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":399851,"byte_end":399856,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":399794,"byte_end":399822,"line_start":21,"line_end":21,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400063,"byte_end":400066,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"fn (buffer: RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400026,"byte_end":400051,"line_start":34,"line_end":34,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400282,"byte_end":400292,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"fn (buffer: RgbaImage, left: u32, top: u32, delay: Ratio<u16>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400245,"byte_end":400270,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400534,"byte_end":400539,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"fn (&self) -> Ratio<u16>","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400499,"byte_end":400522,"line_start":54,"line_end":54,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400633,"byte_end":400639,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"fn (&self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400593,"byte_end":400621,"line_start":59,"line_end":59,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400735,"byte_end":400746,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400695,"byte_end":400723,"line_start":64,"line_end":64,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400835,"byte_end":400839,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400799,"byte_end":400823,"line_start":69,"line_end":69,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400921,"byte_end":400924,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400885,"byte_end":400909,"line_start":74,"line_end":74,"column_start":5,"column_end":29}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":5256,"byte_end":5264,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32626,"byte_end":32633,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":33083,"byte_end":33091,"line_start":208,"line_end":208,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/decoder.rs","byte_start":52040,"byte_end":52051,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/decoder.rs","byte_start":54091,"byte_end":54102,"line_start":96,"line_end":96,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":82981,"byte_end":82991,"line_start":640,"line_end":640,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85254,"byte_end":85264,"line_start":739,"line_end":739,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":87019,"byte_end":87029,"line_start":834,"line_end":834,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":124825,"byte_end":124835,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/decoder.rs","byte_start":127611,"byte_end":127621,"line_start":18,"line_end":18,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/decoder.rs","byte_start":129192,"byte_end":129202,"line_start":65,"line_end":65,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/decoder.rs","byte_start":130498,"byte_end":130508,"line_start":105,"line_end":105,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":131175,"byte_end":131185,"line_start":29,"line_end":29,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":132008,"byte_end":132018,"line_start":54,"line_end":54,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133178,"byte_end":133188,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133896,"byte_end":133905,"line_start":114,"line_end":114,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":134897,"byte_end":134907,"line_start":142,"line_end":142,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/decoder.rs","byte_start":136750,"byte_end":136760,"line_start":40,"line_end":40,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/decoder.rs","byte_start":138522,"byte_end":138530,"line_start":94,"line_end":94,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/decoder.rs","byte_start":139685,"byte_end":139695,"line_start":138,"line_end":138,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/encoder.rs","byte_start":143489,"byte_end":143499,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":152046,"byte_end":152055,"line_start":167,"line_end":167,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":155134,"byte_end":155145,"line_start":290,"line_end":290,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":169598,"byte_end":169609,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":170519,"byte_end":170530,"line_start":42,"line_end":42,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":172228,"byte_end":172237,"line_start":101,"line_end":101,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":172554,"byte_end":172564,"line_start":112,"line_end":112,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182850,"byte_end":182857,"line_start":28,"line_end":28,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":183745,"byte_end":183752,"line_start":56,"line_end":56,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":184876,"byte_end":184883,"line_start":95,"line_end":95,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":185314,"byte_end":185324,"line_start":111,"line_end":111,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/ifd.rs","byte_start":207598,"byte_end":207603,"line_start":97,"line_end":97,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/ifd.rs","byte_start":208457,"byte_end":208462,"line_start":127,"line_end":127,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/ifd.rs","byte_start":208734,"byte_end":208739,"line_start":137,"line_end":137,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":212137,"byte_end":212146,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":212618,"byte_end":212627,"line_start":62,"line_end":62,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":212767,"byte_end":212776,"line_start":69,"line_end":69,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":213040,"byte_end":213051,"line_start":83,"line_end":83,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":213300,"byte_end":213311,"line_start":93,"line_end":93,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":213463,"byte_end":213474,"line_start":100,"line_end":100,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":213625,"byte_end":213636,"line_start":107,"line_end":107,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":189165,"byte_end":189176,"line_start":141,"line_end":141,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":200258,"byte_end":200269,"line_start":441,"line_end":441,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":214519,"byte_end":214528,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":216451,"byte_end":216457,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":217865,"byte_end":217873,"line_start":135,"line_end":135,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":218967,"byte_end":218977,"line_start":176,"line_end":176,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":226324,"byte_end":226334,"line_start":375,"line_end":375,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":229691,"byte_end":229702,"line_start":84,"line_end":84,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":232147,"byte_end":232155,"line_start":167,"line_end":167,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":233580,"byte_end":233589,"line_start":211,"line_end":211,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":234832,"byte_end":234847,"line_start":260,"line_end":260,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":236790,"byte_end":236800,"line_start":316,"line_end":316,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":258320,"byte_end":258330,"line_start":847,"line_end":847,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":260568,"byte_end":260578,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":261203,"byte_end":261213,"line_start":48,"line_end":48,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263083,"byte_end":263093,"line_start":115,"line_end":115,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265125,"byte_end":265135,"line_start":170,"line_end":170,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":271499,"byte_end":271509,"line_start":331,"line_end":331,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":272654,"byte_end":272677,"line_start":366,"line_end":366,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":272971,"byte_end":272994,"line_start":380,"line_end":380,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":274703,"byte_end":274726,"line_start":429,"line_end":429,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":281296,"byte_end":281307,"line_start":591,"line_end":591,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":287499,"byte_end":287505,"line_start":732,"line_end":732,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":287765,"byte_end":287771,"line_start":738,"line_end":738,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":291435,"byte_end":291445,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":294328,"byte_end":294339,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":294503,"byte_end":294514,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":295093,"byte_end":295113,"line_start":121,"line_end":121,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":295372,"byte_end":295392,"line_start":131,"line_end":131,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306987,"byte_end":306997,"line_start":39,"line_end":39,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":308086,"byte_end":308096,"line_start":57,"line_end":57,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":308779,"byte_end":308789,"line_start":78,"line_end":78,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":312520,"byte_end":312526,"line_start":225,"line_end":225,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":313319,"byte_end":313328,"line_start":258,"line_end":258,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":318967,"byte_end":318975,"line_start":449,"line_end":449,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":320296,"byte_end":320304,"line_start":494,"line_end":494,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/bitstream.rs","byte_start":325276,"byte_end":325285,"line_start":78,"line_end":78,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/bitstream.rs","byte_start":325826,"byte_end":325835,"line_start":99,"line_end":99,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/bitstream.rs","byte_start":327624,"byte_end":327633,"line_start":178,"line_end":178,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/bitstream.rs","byte_start":328001,"byte_end":328010,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/lzw.rs","byte_start":329857,"byte_end":329869,"line_start":32,"line_end":32,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/lzw.rs","byte_start":334256,"byte_end":334260,"line_start":174,"line_end":174,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/lzw.rs","byte_start":334557,"byte_end":334569,"line_start":193,"line_end":193,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341237,"byte_end":341249,"line_start":97,"line_end":97,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":352354,"byte_end":352366,"line_start":418,"line_end":418,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":369145,"byte_end":369146,"line_start":226,"line_end":226,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":369300,"byte_end":369304,"line_start":234,"line_end":234,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":369726,"byte_end":369730,"line_start":245,"line_end":245,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":370153,"byte_end":370157,"line_start":256,"line_end":256,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":370355,"byte_end":370360,"line_start":265,"line_end":265,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":370796,"byte_end":370801,"line_start":277,"line_end":277,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":371240,"byte_end":371245,"line_start":289,"line_end":289,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":371502,"byte_end":371506,"line_start":299,"line_end":299,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":371810,"byte_end":371814,"line_start":311,"line_end":311,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":372115,"byte_end":372119,"line_start":322,"line_end":322,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":372442,"byte_end":372445,"line_start":336,"line_end":336,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":372716,"byte_end":372719,"line_start":347,"line_end":347,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":372983,"byte_end":372986,"line_start":357,"line_end":357,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":373354,"byte_end":373359,"line_start":373,"line_end":373,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":374242,"byte_end":374246,"line_start":397,"line_end":397,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":374356,"byte_end":374360,"line_start":403,"line_end":403,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":376314,"byte_end":376317,"line_start":438,"line_end":438,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":376528,"byte_end":376533,"line_start":450,"line_end":450,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":376710,"byte_end":376714,"line_start":460,"line_end":460,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":376912,"byte_end":376916,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":377131,"byte_end":377134,"line_start":481,"line_end":481,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381677,"byte_end":381683,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381945,"byte_end":381951,"line_start":122,"line_end":122,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":382332,"byte_end":382341,"line_start":137,"line_end":137,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":382615,"byte_end":382624,"line_start":148,"line_end":148,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":383068,"byte_end":383083,"line_start":165,"line_end":165,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":383742,"byte_end":383760,"line_start":191,"line_end":191,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1948},{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":384437,"byte_end":384448,"line_start":219,"line_end":219,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386705,"byte_end":386716,"line_start":300,"line_end":300,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388271,"byte_end":388282,"line_start":350,"line_end":350,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388889,"byte_end":388900,"line_start":367,"line_end":367,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":389171,"byte_end":389182,"line_start":378,"line_end":378,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":389455,"byte_end":389466,"line_start":387,"line_end":387,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1990},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":389734,"byte_end":389745,"line_start":398,"line_end":398,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":390004,"byte_end":390015,"line_start":408,"line_end":408,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":390366,"byte_end":390377,"line_start":422,"line_end":422,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":392671,"byte_end":392682,"line_start":486,"line_end":486,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394831,"byte_end":394840,"line_start":549,"line_end":549,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":396448,"byte_end":396459,"line_start":588,"line_end":588,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":399606,"byte_end":399612,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400014,"byte_end":400019,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400989,"byte_end":400995,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1592,"byte_end":1596,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":71}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/mod.rs","byte_start":2453,"byte_end":2458,"line_start":2,"line_end":2,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":72}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/mod.rs","byte_start":2468,"byte_end":2470,"line_start":3,"line_end":3,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1637,"byte_end":1645,"line_start":110,"line_end":110,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":113}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/mod.rs","byte_start":17068,"byte_end":17076,"line_start":54,"line_end":54,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":162}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1697,"byte_end":1701,"line_start":114,"line_end":114,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":273}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/mod.rs","byte_start":51632,"byte_end":51635,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":313}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1735,"byte_end":1738,"line_start":116,"line_end":116,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":479}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1778,"byte_end":1781,"line_start":118,"line_end":118,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":540}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1815,"byte_end":1818,"line_start":120,"line_end":120,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":593}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1853,"byte_end":1857,"line_start":122,"line_end":122,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":680}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1897,"byte_end":1900,"line_start":124,"line_end":124,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":839}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1935,"byte_end":1939,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":888}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":1973,"byte_end":1976,"line_start":128,"line_end":128,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1028}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":2010,"byte_end":2013,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1116}},{"kind":"Mod","span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/lib.rs","byte_start":2047,"byte_end":2050,"line_start":132,"line_end":132,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1266}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/math/nq.rs","byte_start":5256,"byte_end":5264,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":32626,"byte_end":32633,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2088},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/imageops/colorops.rs","byte_start":33083,"byte_end":33091,"line_start":208,"line_end":208,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/decoder.rs","byte_start":52040,"byte_end":52051,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/decoder.rs","byte_start":54091,"byte_end":54102,"line_start":96,"line_end":96,"column_start":32,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":288},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":82981,"byte_end":82991,"line_start":640,"line_end":640,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":85254,"byte_end":85264,"line_start":739,"line_end":739,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/webp/vp8.rs","byte_start":87019,"byte_end":87029,"line_start":834,"line_end":834,"column_start":15,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/encoder.rs","byte_start":124825,"byte_end":124835,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/decoder.rs","byte_start":127611,"byte_end":127621,"line_start":18,"line_end":18,"column_start":15,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/decoder.rs","byte_start":129192,"byte_end":129202,"line_start":65,"line_end":65,"column_start":32,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":519},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ppm/decoder.rs","byte_start":130498,"byte_end":130508,"line_start":105,"line_end":105,"column_start":15,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":131175,"byte_end":131185,"line_start":29,"line_end":29,"column_start":15,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":132008,"byte_end":132018,"line_start":54,"line_end":54,"column_start":32,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":562},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133178,"byte_end":133188,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":133896,"byte_end":133905,"line_start":114,"line_end":114,"column_start":48,"column_end":57},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/png.rs","byte_start":134897,"byte_end":134907,"line_start":142,"line_end":142,"column_start":35,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2593},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/decoder.rs","byte_start":136750,"byte_end":136760,"line_start":40,"line_end":40,"column_start":22,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/decoder.rs","byte_start":138522,"byte_end":138530,"line_start":94,"line_end":94,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/decoder.rs","byte_start":139685,"byte_end":139695,"line_start":138,"line_end":138,"column_start":39,"column_end":49},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":615},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/ico/encoder.rs","byte_start":143489,"byte_end":143499,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":152046,"byte_end":152055,"line_start":167,"line_end":167,"column_start":25,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/encoder.rs","byte_start":155134,"byte_end":155145,"line_start":290,"line_end":290,"column_start":20,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":169598,"byte_end":169609,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":170519,"byte_end":170530,"line_start":42,"line_end":42,"column_start":32,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":798},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":172228,"byte_end":172237,"line_start":101,"line_end":101,"column_start":42,"column_end":51},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/jpeg/decoder.rs","byte_start":172554,"byte_end":172564,"line_start":112,"line_end":112,"column_start":36,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2593},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":182850,"byte_end":182857,"line_start":28,"line_end":28,"column_start":15,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":183745,"byte_end":183752,"line_start":56,"line_end":56,"column_start":32,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":184876,"byte_end":184883,"line_start":95,"line_end":95,"column_start":16,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/gif.rs","byte_start":185314,"byte_end":185324,"line_start":111,"line_end":111,"column_start":35,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2593},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/ifd.rs","byte_start":207598,"byte_end":207603,"line_start":97,"line_end":97,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/ifd.rs","byte_start":208457,"byte_end":208462,"line_start":127,"line_end":127,"column_start":28,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/ifd.rs","byte_start":208734,"byte_end":208739,"line_start":137,"line_end":137,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":211248,"byte_end":211252,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2932},"to":{"krate":0,"index":959}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":212137,"byte_end":212146,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":212618,"byte_end":212627,"line_start":62,"line_end":62,"column_start":15,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":963},"to":{"krate":1,"index":2932}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":212767,"byte_end":212776,"line_start":69,"line_end":69,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":963},"to":{"krate":0,"index":959}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":213040,"byte_end":213051,"line_start":83,"line_end":83,"column_start":9,"column_end":20},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":213300,"byte_end":213311,"line_start":93,"line_end":93,"column_start":26,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2315},"to":{"krate":0,"index":959}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":213463,"byte_end":213474,"line_start":100,"line_end":100,"column_start":31,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2315},"to":{"krate":1,"index":2932}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/stream.rs","byte_start":213625,"byte_end":213636,"line_start":107,"line_end":107,"column_start":31,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2315},"to":{"krate":1,"index":3009}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":189165,"byte_end":189176,"line_start":141,"line_end":141,"column_start":22,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tiff/decoder/mod.rs","byte_start":200258,"byte_end":200269,"line_start":441,"line_end":441,"column_start":39,"column_end":50},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2418},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":214519,"byte_end":214528,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":216451,"byte_end":216457,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":217865,"byte_end":217873,"line_start":135,"line_end":135,"column_start":6,"column_end":14},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":218967,"byte_end":218977,"line_start":176,"line_end":176,"column_start":22,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/tga/decoder.rs","byte_start":226324,"byte_end":226334,"line_start":375,"line_end":375,"column_start":39,"column_end":49},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1082},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":229691,"byte_end":229702,"line_start":84,"line_end":84,"column_start":23,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":232147,"byte_end":232155,"line_start":167,"line_end":167,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":233580,"byte_end":233589,"line_start":211,"line_end":211,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":234832,"byte_end":234847,"line_start":260,"line_end":260,"column_start":32,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1220},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":236790,"byte_end":236800,"line_start":316,"line_end":316,"column_start":22,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/bmp/decoder.rs","byte_start":258320,"byte_end":258330,"line_start":847,"line_end":847,"column_start":39,"column_end":49},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1187},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":260568,"byte_end":260578,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":261203,"byte_end":261213,"line_start":48,"line_end":48,"column_start":35,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2523},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":263083,"byte_end":263093,"line_start":115,"line_end":115,"column_start":6,"column_end":16},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":265125,"byte_end":265135,"line_start":170,"line_end":170,"column_start":18,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":271499,"byte_end":271509,"line_start":331,"line_end":331,"column_start":35,"column_end":45},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2530},"to":{"krate":2,"index":4875}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":272654,"byte_end":272677,"line_start":366,"line_end":366,"column_start":18,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":272971,"byte_end":272994,"line_start":380,"line_end":380,"column_start":31,"column_end":54},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":274703,"byte_end":274726,"line_start":429,"line_end":429,"column_start":40,"column_end":63},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":281296,"byte_end":281307,"line_start":591,"line_end":591,"column_start":6,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":287499,"byte_end":287505,"line_start":732,"line_end":732,"column_start":46,"column_end":52},"kind":{"Impl":{"id":65}},"from":{"krate":2,"index":30026},"to":{"krate":0,"index":1371}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_decoder.rs","byte_start":287765,"byte_end":287771,"line_start":738,"line_end":738,"column_start":46,"column_end":52},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":30026},"to":{"krate":0,"index":1371}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":291435,"byte_end":291445,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":294328,"byte_end":294339,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":294503,"byte_end":294514,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1416},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":295093,"byte_end":295113,"line_start":121,"line_end":121,"column_start":10,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/hdr/hdr_encoder.rs","byte_start":295372,"byte_end":295392,"line_start":131,"line_end":131,"column_start":23,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1428},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":306987,"byte_end":306997,"line_start":39,"line_end":39,"column_start":23,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2593},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":308086,"byte_end":308096,"line_start":57,"line_end":57,"column_start":16,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2593},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":308779,"byte_end":308789,"line_start":78,"line_end":78,"column_start":26,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2593},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":310003,"byte_end":310008,"line_start":141,"line_end":141,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":312520,"byte_end":312526,"line_start":225,"line_end":225,"column_start":40,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1487},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":313319,"byte_end":313328,"line_start":258,"line_end":258,"column_start":45,"column_end":54},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":314226,"byte_end":314231,"line_start":291,"line_end":291,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":1513}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":318967,"byte_end":318975,"line_start":449,"line_end":449,"column_start":37,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/image.rs","byte_start":320296,"byte_end":320304,"line_start":494,"line_end":494,"column_start":54,"column_end":62},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1532},"to":{"krate":0,"index":1513}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/bitstream.rs","byte_start":323834,"byte_end":323838,"line_start":8,"line_end":8,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":2932},"to":{"krate":0,"index":1564}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/bitstream.rs","byte_start":323970,"byte_end":323975,"line_start":14,"line_end":14,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2991},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/bitstream.rs","byte_start":325276,"byte_end":325285,"line_start":78,"line_end":78,"column_start":23,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2655},"to":{"krate":0,"index":1564}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/bitstream.rs","byte_start":325826,"byte_end":325835,"line_start":99,"line_end":99,"column_start":23,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2667},"to":{"krate":0,"index":1564}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/bitstream.rs","byte_start":327624,"byte_end":327633,"line_start":178,"line_end":178,"column_start":27,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/bitstream.rs","byte_start":328001,"byte_end":328010,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2694},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/lzw.rs","byte_start":329857,"byte_end":329869,"line_start":32,"line_end":32,"column_start":6,"column_end":18},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/lzw.rs","byte_start":334256,"byte_end":334260,"line_start":174,"line_end":174,"column_start":6,"column_end":10},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/utils/lzw.rs","byte_start":334557,"byte_end":334569,"line_start":193,"line_end":193,"column_start":6,"column_end":18},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":341237,"byte_end":341249,"line_start":97,"line_end":97,"column_start":6,"column_end":18},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/dynimage.rs","byte_start":352354,"byte_end":352366,"line_start":418,"line_end":418,"column_start":23,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2715},"to":{"krate":0,"index":1513}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":369145,"byte_end":369146,"line_start":226,"line_end":226,"column_start":32,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1773},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":369300,"byte_end":369304,"line_start":234,"line_end":234,"column_start":53,"column_end":57},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2974},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":369726,"byte_end":369730,"line_start":245,"line_end":245,"column_start":52,"column_end":56},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2974},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":370153,"byte_end":370157,"line_start":256,"line_end":256,"column_start":54,"column_end":58},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2974},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":370355,"byte_end":370360,"line_start":265,"line_end":265,"column_start":53,"column_end":58},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3030},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":370796,"byte_end":370801,"line_start":277,"line_end":277,"column_start":52,"column_end":57},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3030},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":371240,"byte_end":371245,"line_start":289,"line_end":289,"column_start":53,"column_end":58},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3030},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":371502,"byte_end":371506,"line_start":299,"line_end":299,"column_start":52,"column_end":56},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3002},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":371810,"byte_end":371814,"line_start":311,"line_end":311,"column_start":54,"column_end":58},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3002},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":372115,"byte_end":372119,"line_start":322,"line_end":322,"column_start":53,"column_end":57},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3002},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":372442,"byte_end":372445,"line_start":336,"line_end":336,"column_start":53,"column_end":56},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2946},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":372716,"byte_end":372719,"line_start":347,"line_end":347,"column_start":54,"column_end":57},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2946},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":372983,"byte_end":372986,"line_start":357,"line_end":357,"column_start":53,"column_end":56},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2946},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":373354,"byte_end":373359,"line_start":373,"line_end":373,"column_start":30,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3030},"to":{"krate":0,"index":1811}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":374242,"byte_end":374246,"line_start":397,"line_end":397,"column_start":30,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2974},"to":{"krate":0,"index":1811}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":374356,"byte_end":374360,"line_start":403,"line_end":403,"column_start":30,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3002},"to":{"krate":0,"index":1811}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":376314,"byte_end":376317,"line_start":438,"line_end":438,"column_start":30,"column_end":33},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2946},"to":{"krate":0,"index":1811}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":376528,"byte_end":376533,"line_start":450,"line_end":450,"column_start":31,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3030},"to":{"krate":0,"index":1825}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":376710,"byte_end":376714,"line_start":460,"line_end":460,"column_start":31,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2974},"to":{"krate":0,"index":1825}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":376912,"byte_end":376916,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3002},"to":{"krate":0,"index":1825}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/color.rs","byte_start":377131,"byte_end":377134,"line_start":481,"line_end":481,"column_start":31,"column_end":34},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2946},"to":{"krate":0,"index":1825}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":377842,"byte_end":377846,"line_start":17,"line_end":17,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1913},"to":{"krate":0,"index":1863}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":377849,"byte_end":377854,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1604},"to":{"krate":0,"index":1863}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381677,"byte_end":381683,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1896},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":381945,"byte_end":381951,"line_start":122,"line_end":122,"column_start":49,"column_end":55},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1896},"to":{"krate":2,"index":4897}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":382332,"byte_end":382341,"line_start":137,"line_end":137,"column_start":38,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1911},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":382615,"byte_end":382624,"line_start":148,"line_end":148,"column_start":49,"column_end":58},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1911},"to":{"krate":2,"index":4897}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":383068,"byte_end":383083,"line_start":165,"line_end":165,"column_start":38,"column_end":53},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1926},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":383742,"byte_end":383760,"line_start":191,"line_end":191,"column_start":38,"column_end":56},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1938},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":384437,"byte_end":384448,"line_start":219,"line_end":219,"column_start":20,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":386705,"byte_end":386716,"line_start":300,"line_end":300,"column_start":20,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388271,"byte_end":388282,"line_start":350,"line_end":350,"column_start":20,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":388889,"byte_end":388900,"line_start":367,"line_end":367,"column_start":30,"column_end":41},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":389171,"byte_end":389182,"line_start":378,"line_end":378,"column_start":33,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":389455,"byte_end":389466,"line_start":387,"line_end":387,"column_start":42,"column_end":53},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":389734,"byte_end":389745,"line_start":398,"line_end":398,"column_start":45,"column_end":56},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":2159}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":390004,"byte_end":390015,"line_start":408,"line_end":408,"column_start":30,"column_end":41},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":390366,"byte_end":390377,"line_start":422,"line_end":422,"column_start":37,"column_end":48},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3058},"to":{"krate":0,"index":1513}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":392671,"byte_end":392682,"line_start":486,"line_end":486,"column_start":26,"column_end":37},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":394831,"byte_end":394840,"line_start":549,"line_end":549,"column_start":6,"column_end":15},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/buffer.rs","byte_start":396448,"byte_end":396459,"line_start":588,"line_end":588,"column_start":9,"column_end":20},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3058},"to":{"krate":0,"index":2020}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/traits.rs","byte_start":399045,"byte_end":399049,"line_start":9,"line_end":9,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1913},"to":{"krate":0,"index":2042}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/traits.rs","byte_start":399052,"byte_end":399059,"line_start":9,"line_end":9,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":18,"index":176},"to":{"krate":0,"index":2042}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/traits.rs","byte_start":399062,"byte_end":399065,"line_start":9,"line_end":9,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":18,"index":589},"to":{"krate":0,"index":2042}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/traits.rs","byte_start":399068,"byte_end":399078,"line_start":9,"line_end":9,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1669},"to":{"krate":0,"index":2042}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/traits.rs","byte_start":399087,"byte_end":399092,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":1604},"to":{"krate":0,"index":2042}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/traits.rs","byte_start":399095,"byte_end":399102,"line_start":9,"line_end":9,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":18,"index":92},"to":{"krate":0,"index":2042}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":399606,"byte_end":399612,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400014,"byte_end":400019,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fitraaditama/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.13.0/./src/animation.rs","byte_start":400989,"byte_end":400995,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2058},"to":{"krate":2,"index":4965}}]}